{"version":3,"sources":["hooks/useKeyDown.ts","context/Title.tsx","hooks/useTitle.ts","pages/Break/Break.tsx","pages/Calibration/Calibration.tsx","pages/Console/Console.tsx","pages/CurrentSituation/CurrentSituation.tsx","pages/MainBlocks/MainBlocks.tsx","pages/Speed/Speed.tsx","pages/Schematic/Schematic.tsx","pages/Thanks/Thanks.tsx","pages/Title/Title.tsx","pages/Torque/Torque.tsx","pages/Video/Video.tsx","pages/WhatIs/WhatIs.tsx","pages/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useKeydown","keyMap","keyHandler","event","code","useEffect","document","addEventListener","removeEventListener","TitleContext","React","createContext","title","setTitle","newTitle","useTitle","useContext","updateTitle","Break","className","Calibration","Icon","posed","div","exit","opacity","width","height","enter","Console","src","AnimatedList","staggerChildren","delayChildren","transition","default","duration","Overlay","zIndex","AnimatedImg","selected","scale","ease","unselected","sources","name","alt","CurrentSituation","useState","length","index","setIndex","interval","setInterval","clearInterval","key","map","i","pose","ul","AnimatedItem","li","rotateX","WhatIs","urlPrefix","console","log","Speed","Img","img","rotateY","Schematic","Title","Video","autoPlay","disableCompletely","pageIndex","RouteContainer","left","Header","span","collapsed","fontSize","expanded","Controls","App","leftArrow","useRef","rightArrow","useKeyDown","ArrowLeft","_","current","click","ArrowRight","render","location","pathname","indexOf","replace","nextSlide","prevSlide","path","component","MainBlocks","Thanks","Torque","ref","id","to","Boolean","window","hostname","match","ReactDOM","basename","process","children","TitleHandler","Provider","value","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7c4fe36.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\ninterface KeyHandlers {\n    [key: string]: (event?: React.SyntheticEvent) => void;\n}\n\nconst useKeydown = (keyMap: KeyHandlers) => {\n    const keyHandler = event => keyMap[event.code] && keyMap[event.code](event);\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyHandler);\n\n        return () => document.removeEventListener('keydown', keyHandler);\n    });\n};\n\nexport default useKeydown;\n","import React, { useState} from 'react';\ninterface TitleContext {\n    title: string;\n    setTitle: (newTitle: string) => void;\n}\nconst voidContext: TitleContext = {\n    title: '',\n    setTitle: newTitle => {},\n};\nconst TitleContext = React.createContext<TitleContext>(voidContext);\n\nconst TitleProvider: React.FC = ({ children }) => {\n    const [title, setTitle] = useState('Proyecto final de ingenier√≠a');\n\n    const TitleHandler = {\n        title,\n        setTitle,\n    };\n\n    return <TitleContext.Provider value={TitleHandler}>{children}</TitleContext.Provider>;\n};\n\nexport { TitleContext, TitleProvider };\n","import { TitleContext } from '../context/Title';\nimport { useContext } from 'react';\n\ninterface Handler {\n    title: string;\n    updateTitle: (newTitle: string) => void;\n}\n\nconst useTitle = () => {\n    const { title, setTitle } = useContext(TitleContext);\n    const updateTitle = (newTitle: string) => {\n        if (newTitle) setTitle(newTitle);\n    };\n    return {\n        title,\n        updateTitle,\n    };\n};\n\nexport default useTitle;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Break.scss';\nconst Break: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('noencontreicono');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <h1>Break</h1>\n        </div>\n    );\n};\n\nexport default Break;\n","import React, { useEffect} from 'react';\nimport { useTitle } from '../../hooks';\nimport './Calibration.scss';\n\nconst Calibration: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Calibraci√≥n');\n    }, []);\n    return (\n        <div className=\"slide\">\n          <h1>Calibracion de la celda de carga</h1>\n        </div>\n    );\n};\n\nexport default Calibration;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Console.scss';\n\nconst Icon = posed.div({\n    exit: { opacity: 0, width: 10, height: 10 },\n    enter: { opacity: 1, width: 720, height: 720 },\n});\n\nconst Console: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('üïπ');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <Icon className=\"console\">\n                <img className=\"icon\" src={`${urlPrefix}/panel.png`} />\n            </Icon>\n        </div>\n    );\n};\n\nexport default Console;\n","import React, { useEffect, useState } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './CurrentSituation.scss';\n\nconst AnimatedList = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 120,\n        delayChildren: 400,\n        transition: {\n            default: { duration: 100 },\n        },\n    },\n});\nconst Overlay = posed.div({\n    exit: {\n        opacity: 0,\n        zIndex: 0,\n    },\n    enter: {\n        opacity: 1,\n        zIndex: 2,\n        transition: {\n            default: { duration: 150 },\n        },\n    },\n});\nconst AnimatedImg = posed.div({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n    selected: {\n        zIndex: 3,\n        scale: 1.3,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n    unselected: {\n        zIndex: 1,\n        scale: 1,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n});\ntype ImageData = { name: string; alt: string };\nconst sources: Array<ImageData> = [\n    { name: 'console', alt: 'Consola' },\n    { name: 'break', alt: 'Freno' },\n    { name: 'sensor', alt: 'Encoder' },\n    { name: 'console-2', alt: 'Detalle consola' },\n    { name: 'engine', alt: 'Motor y freno' },\n];\nconst CurrentSituation: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const [index, setIndex] = useState(sources.length - 1);\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle(' ');\n        const interval = setInterval(() => {\n            setIndex((index: number) => (index >= sources.length - 1 ? 0 : index + 1));\n        }, 15000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <Overlay className=\"overlay\" key=\"overlay\" />\n            <AnimatedList key=\"list\" className=\"slide currentSituation\">\n                {sources.map(({ name, alt }, i: number) => {\n                    const src = `${urlPrefix}/${name}.jpg`;\n                    return (\n                        <AnimatedImg\n                            className=\"picture\"\n                            pose={index === i ? 'selected' : 'unselected'}\n                            key={src}>\n                            <img src={src} alt={alt} />\n                            {index === i && <p>{alt}</p>}\n                        </AnimatedImg>\n                    );\n                })}\n            </AnimatedList>\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './MainBlocks.scss';\n\nconst AnimatedList = posed.ul({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 500,\n    },\n});\nconst AnimatedItem = posed.li({\n    exit: { opacity: 0, rotateX: '-90deg' },\n    enter: { opacity: 1, rotateX: '0deg' },\n});\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle(' ');\n        console.log('enter');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <AnimatedList className=\"main-blocks\">\n                <AnimatedItem key=\"engine\" className=\"block first\">\n                    <img className=\"icon\" src={`${urlPrefix}/engine.png`} />\n                    <span className=\"name\">Motor</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"panel\" className=\"block\">\n                    <img className=\"icon\" src={`${urlPrefix}/panel.png`} />\n                    <span className=\"name\">Consola</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"break\" className=\"block\">\n                    <img className=\"icon\" src={`${urlPrefix}/break-small.png`} />\n                    <span className=\"name\">Freno</span>\n                </AnimatedItem>\n            </AnimatedList>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Speed.scss';\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('üèÉ‚Äç‚ôÄüí®');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <h1>Velocidad</h1>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Schematic.scss';\n\nconst Img = posed.img({\n    exit: { opacity: 0, rotateY: '-180deg' },\n    enter: { opacity: 1, rotateY: '0deg' },\n});\n\nconst Schematic: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Esquem√°tico');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <Img src={`${urlPrefix}/schematic.png`} />\n        </div>\n    );\n};\n\nexport default Schematic;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Thanks.scss';\n\nconst CurrentSituation: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('üôè');\n    }, []);\n    return (\n        <div className=\"title\">\n            <h1>Muchas gracias</h1>\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Title.scss';\n\nconst Title: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Proyecto final de ingenier√≠a');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <p className=\"main-title\">\n                Automatizaci√≥n de un banco de pruebas de un motor a combusti√≥n\n            </p>\n            <div className=\"author\">\n                <span>Alumnos</span>\n                <hr />\n                <div>\n                    <img className=\"avatar\" src={`${urlPrefix}/avatar.png`} />\n                    Cicetti, Joaqu√≠n\n                </div>\n                <div>\n                    <img className=\"avatar\" src={`${urlPrefix}/avatar.png`} />\n                    Morelli, Nahuel\n                </div>\n                <span>Director</span>\n                <hr />\n                <div>\n                    <img className=\"avatar director\" src={`${urlPrefix}/avatar-director.png`} />\n                    Sim√≥n, Jos√©\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default Title;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Torque.scss';\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('üí™');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <span className=\"line right top\" />\n            <h1>Torque</h1>\n            <span className=\"line left bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect, useRef } from 'react';\nimport { useTitle } from '../../hooks';\nimport { Player, ControlBar } from 'video-react';\nimport 'video-react/dist/video-react.css';\nimport './Video.scss';\ntype Player = {\n    video: {\n        toggleFullscreen: () => void;\n    };\n};\nconst Video: React.FC = () => {\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/videos' : '/thesis-presentation/videos';\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle(' ');\n    }, []);\n    return (\n        <div className=\"video\">\n            <Player autoPlay src={`${urlPrefix}/calibration.mp4`}>\n                <ControlBar disableCompletely />\n            </Player>\n        </div>\n    );\n};\n\nexport default Video;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './WhatIs.scss';\n\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('ü§î');\n    }, []);\n    return (\n        <div className=\"slide\">\n            <div className=\"asks\">\n                <div className=\"ask\">\n                    <img className=\"icon\" src={`${urlPrefix}/ask.png`} />\n                    Que es un banco de pruebas?\n                </div>\n                <div className=\"ask\">\n                    <img className=\"icon\" src={`${urlPrefix}/ask.png`} />\n                    Para que sirve?\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","export { default as Break } from './Break/Break';\nexport { default as Calibration } from './Calibration/Calibration';\nexport { default as Console } from './Console/Console';\nexport { default as CurrentSituation } from './CurrentSituation/CurrentSituation';\nexport { default as MainBlocks } from './MainBlocks/MainBlocks';\nexport { default as Speed } from './Speed/Speed';\nexport { default as Schematic } from './Schematic/Schematic';\nexport { default as Thanks } from './Thanks/Thanks';\nexport { default as Title } from './Title/Title';\nexport { default as Torque } from './Torque/Torque';\nexport { default as Video } from './Video/Video';\nexport { default as WhatIs } from './WhatIs/WhatIs';\n// slides order\nexport const pageIndex = [\n    'title',\n    'what-is',\n    'main-blocks',\n    'console',\n    'speed',\n    'torque',\n    'break',\n    'current-situation',\n    'schematic',\n    'calibration',\n    'video',\n    'thanks',\n];\n","import React, { useRef } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport {\n    Break,\n    Calibration,\n    Console,\n    CurrentSituation,\n    MainBlocks,\n    pageIndex,\n    Title,\n    WhatIs,\n    Speed,\n    Schematic,\n    Thanks,\n    Torque,\n    Video,\n} from './pages';\nimport { useTitle, useKeyDown } from './hooks';\nimport './App.scss';\n\nconst RouteContainer = posed.div({\n    enter: {\n        opacity: 1,\n        left: 0,\n        transition: {\n            default: { duration: 1000 },\n        },\n    },\n    exit: { opacity: 0, left: '-20%' },\n});\n\nconst Header = posed.span({\n    collapsed: {\n        fontSize: '2em',\n        height: '10vh',\n        transition: { duration: 200 },\n    },\n    expanded: {\n        fontSize: '3em',\n        height: '50vh',\n        transition: { duration: 200 },\n    },\n});\nconst Controls = posed.div({\n    collapsed: {\n        height: '5vh',\n        transition: { duration: 200 },\n    },\n    expanded: {\n        height: '50vh',\n        transition: { duration: 200 },\n    },\n});\nconst App: React.FC = () => {\n    const leftArrow = useRef(null);\n    const rightArrow = useRef(null);\n    const { title } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useKeyDown({\n        ArrowLeft: _ => {\n            if (leftArrow && leftArrow.current && typeof leftArrow.current.click === 'function')\n                leftArrow.current.click();\n        },\n    });\n    useKeyDown({\n        ArrowRight: _ => {\n            if (rightArrow && rightArrow.current && typeof rightArrow.current.click === 'function')\n                rightArrow.current.click();\n        },\n    });\n    return (\n        <div className=\"app\">\n            <div className=\"bg\"></div>\n            <Route\n                render={({ location }) => {\n                    const { pathname } = location;\n                    const index = pageIndex.indexOf(pathname.replace('/', ''));\n                    const nextSlide = pageIndex[index + 1] || '';\n                    const prevSlide = pageIndex[index - 1] || '';\n                    return (\n                        <PoseGroup>\n                            <Header\n                                className=\"header\"\n                                key=\"header\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {title}\n                            </Header>\n                            <RouteContainer key={`routerContainer${location.key}`}>\n                                <Switch location={location} key={'switch'}>\n                                    <Route path={`/break`} component={Break} key=\"break\" />\n                                    <Route\n                                        path={`/calibration`}\n                                        component={Calibration}\n                                        key=\"calibration\"\n                                    />\n                                    <Route path={`/console`} component={Console} key=\"console\" />\n                                    <Route\n                                        path={`/current-situation`}\n                                        component={CurrentSituation}\n                                        key=\"current-situation\"\n                                    />\n\n                                    <Route\n                                        path={`/main-blocks`}\n                                        component={MainBlocks}\n                                        key=\"main-blocks\"\n                                    />\n                                    <Route\n                                        path={`/schematic`}\n                                        component={Schematic}\n                                        key=\"schematic\"\n                                    />\n                                    <Route path={`/speed`} component={Speed} key=\"speed\" />\n                                    <Route path={`/thanks`} component={Thanks} key=\"thanks\" />\n                                    <Route path={`/title`} component={Title} key=\"title\" />\n                                    <Route path={`/torque`} component={Torque} key=\"torque\" />\n                                    <Route path={`/video`} component={Video} key=\"video\" />\n                                    <Route path={`/what-is`} component={WhatIs} key=\"what-is\" />\n                                </Switch>\n                            </RouteContainer>\n                            <Controls\n                                key=\"controls\"\n                                className=\"controls\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {index >= 0 && (\n                                    <Link ref={leftArrow} id=\"backButton\" to={`/${prevSlide}`}>\n                                        <img\n                                            alt=\"icon-arrow-right\"\n                                            className=\"left\"\n                                            src={`${urlPrefix}/arrow-right.png`}\n                                        />\n                                    </Link>\n                                )}\n                                {index >= 0 && <span className=\"index\">{index}</span>}\n                                {index < pageIndex.length && (\n                                    <Link ref={rightArrow} to={`/${nextSlide}`}>\n                                        {index >= 0 ? (\n                                            <img\n                                                alt=\"icon-arrow-right\"\n                                                src={`${urlPrefix}/arrow-right.png`}\n                                            />\n                                        ) : (\n                                            <img alt=\"icon-play\" src={`${urlPrefix}/play.png`} />\n                                        )}\n                                    </Link>\n                                )}\n                            </Controls>\n                        </PoseGroup>\n                    );\n                }}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { TitleProvider } from './context/Title';\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <TitleProvider>\n            <App />\n        </TitleProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}