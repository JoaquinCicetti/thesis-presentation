{"version":3,"sources":["context/Socket.tsx","hooks/useKeyDown.ts","context/Title.tsx","hooks/useTitle.ts","pages/Break/Break.tsx","pages/CalibrationCell/CalibrationCell.tsx","pages/CalibrationEncoder/CalibrationEncoder.tsx","pages/CalibrationMethods/CalibrationMethods.tsx","pages/Conclusions/Conclusions.tsx","pages/Console/Console.tsx","pages/CurrentSituation/CurrentSituation.tsx","pages/Enhancements/Enhancements.tsx","pages/Inputs/Inputs.tsx","pages/Linealization/Linealization.tsx","pages/MainBlocks/MainBlocks.tsx","pages/Objectives/Objectives.tsx","pages/Outputs/Outputs.tsx","pages/Requirements/Requirements.tsx","pages/Controller/Controller.tsx","components/AnimatedList/AnimatedList.tsx","components/MorphingIcon/Icons.ts","components/MorphingIcon/MorphingIcon.tsx","pages/Thanks/Thanks.tsx","pages/Title/Title.tsx","pages/Signals/Signals.tsx","pages/State/State.tsx","pages/Video/Video.tsx","pages/WhatIs/WhatIs.tsx","pages/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["voidContext","socket","Socket","suscribe","event","onmessage","console","warn","emit","message","SocketContext","React","createContext","useKeydown","keyMap","keyHandler","code","useEffect","document","addEventListener","removeEventListener","TitleContext","title","setTitle","newTitle","useTitle","useContext","updateTitle","Break","className","data","weight","output","CalibrationCell","useState","step","setStep","visibleData","slice","iterate","prev","length","useKeyDown","KeyI","Space","on","map","_","index","key","alt","src","height","strokeDasharray","dataKey","tickCount","type","domain","stroke","strokeWidth","dot","name","animationDuration","CalibrationEncoder","initial","CalibrationMethods","active","setActive","dataset","setDataset","currentValue","setCurrentValue","Math","random","urlPrefix","addData","noise","newValue","round","newData","time","Date","getTime","torque","newDataset","push","interval","setInterval","clearInterval","value","currentValueText","maxValue","minValue","segments","ringWidth","startColor","endColor","needleColor","maxSegmentLabels","width","needleTransitionDuration","needleTransition","hide","Conclusions","CentralIcon","posed","div","exit","opacity","scale","enter","staggerChildren","delayChildren","Item","Lines","span","Console","AnimatedList","transition","default","duration","Overlay","zIndex","AnimatedImg","selected","ease","unselected","sources","CurrentSituation","setIndex","useRef","current","i","pose","Enhancements","AnimatedDiagram","Line","delay","AnimatedBlock","rotateY","Inputs","kg","v","Linealization","ul","AnimatedItem","li","rotateX","WhatIs","Objectives","Outputs","Requirements","Controller","Schematic","position","flip","left","bottom","Icons","cpu","computer","discrete","equalizer","hub","lightSignal","message2","plot","resistor","sensor","sensor2","share","signal","signal2","voiceSensor","voiceSignal","line","thanks","morphTransition","from","to","tween","pipe","interpolate","Paths","Object","entries","reduce","paths","icon","d","Icon","path","forwardRef","ref","viewBox","status","setStatus","Title","secuency","body","examples","Mobile","x","Speed","content","poseKey","example","speed","Video","autoPlay","disableCompletely","pageIndex","App","leftArrow","rightArrow","history","useHistory","location","useLocation","devices","setDevices","clickRight","click","clickLeft","ArrowLeft","ArrowRight","slide","pathname","replace","indexOf","command","shortcut","route","render","nextSlide","prevSlide","serverIP","window","Header","RouteContainer","component","MainBlocks","Signals","State","Thanks","Controls","id","level","fgColor","size","bgColor","Array","fill","beforeChildren","collapsed","fontSize","expanded","Boolean","hostname","match","ReactDOM","basename","process","children","io","context","onMessage","Provider","TitleHandler","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"00BAmBaA,EAA6B,CACtCC,OAAQC,SACRC,SAAU,SAACC,EAAeC,GAAhB,OAAyCC,QAAQC,KAAK,cAChEC,KAAM,SAACJ,EAAeK,GAAhB,OAAqCH,QAAQC,KAAK,eAG/CG,EAAgBC,IAAMC,cAAcZ,G,kBCTlCa,EAVI,SAACC,GAChB,IAAMC,EAAa,SAAAX,GAAK,OAAIU,EAAOV,EAAMY,OAASF,EAAOV,EAAMY,MAAMZ,IAErEa,qBAAU,WAGN,OAFAC,SAASC,iBAAiB,UAAWJ,GAE9B,kBAAMG,SAASE,oBAAoB,UAAWL,QCHvDM,EAAeV,IAAMC,cAJO,CAC9BU,MAAO,GACPC,SAAU,SAAAC,OCYCC,EAXE,WAAO,IAAD,EACSC,qBAAWL,GAA/BC,EADW,EACXA,MAAOC,EADI,EACJA,SAIf,MAAO,CACHD,QACAK,YALgB,SAACH,GACbA,GAAUD,EAASC,MCKhBI,G,OAbS,WAAO,IACnBD,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,qBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,0BAAMA,UAAU,kBAChB,wC,QCINC,G,OAAoB,CACtB,CACIC,OAAQ,EACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,OAEZ,CACID,OAAQ,GACRC,OAAQ,OAEZ,CACID,OAAQ,GACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,QAmFDC,EA/EmB,WAAO,IAC7BhC,EAAWyB,qBAAWhB,GAAtBT,OACA0B,EAAgBF,IAAhBE,YAF4B,EAGZO,mBAAiB,GAHL,mBAG7BC,EAH6B,KAGvBC,EAHuB,KAI9BC,EAAcP,EAAKQ,MAAM,EAAGH,GAI5BI,EAAU,WACZH,GAAQ,SAACI,GACL,OAAOA,EAAOV,EAAKW,OAAS,IAAMD,EAAO,MAcjD,OAXAE,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WACNU,EAAY,sCACb,CAACA,IAEJV,qBAAU,WACNhB,EAAO4C,GAAG,UAAWN,KACtB,CAACtC,IAEA,yBAAK4B,UAAU,qBACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,SAAhB,kBACA,yBAAKA,UAAU,aACVQ,EAAYS,KAAI,SAACC,EAASC,GACvB,OAAO,yBAAKC,IAAG,gBAAWD,GAASnB,UAAU,gBAIzD,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,UAEpB,yBAAKA,UAAU,OACX,yBAAKqB,IAAI,WAAWD,IAAI,MAAME,IAAG,UArCG,8BAqCH,iBAErC,yBAAKtB,UAAU,kBACX,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,WAGxB,0BAAMA,UAAU,SAAhB,uBAEJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAqBuB,OAAQ,QACzB,kBAAC,IAAD,CAAWtB,KAAMO,GACb,kBAAC,IAAD,CAAegB,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SAASC,UAAW,EAAGC,KAAK,SAASC,OAAQ,CAAC,EAAG,OAChE,kBAAC,IAAD,CAAOH,QAAQ,SAASC,UAAW,GAAIC,KAAK,SAASC,OAAQ,CAAC,EAAG,MACjE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIH,QAAQ,SACRI,OAAO,UACPC,YAAa,EACbC,IAAK,CAAEF,OAAQ,UAAWC,YAAa,GACvCE,KAAK,cACLC,kBAAmB,YChG7ChC,G,OAAoB,CACtB,CACIC,OAAQ,EACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,OAEZ,CACID,OAAQ,GACRC,OAAQ,OAEZ,CACID,OAAQ,GACRC,OAAQ,MAEZ,CACID,OAAQ,GACRC,OAAQ,QAmFD+B,EA/EsB,WAAO,IAChC9D,EAAWyB,qBAAWhB,GAAtBT,OACA0B,EAAgBF,IAAhBE,YAF+B,EAGfO,mBAAiB,GAHF,mBAGhCC,EAHgC,KAG1BC,EAH0B,KAIjCC,EAAcP,EAAKQ,MAAM,EAAGH,GAI5BI,EAAU,WACZH,GAAQ,SAACI,GACL,OAAOA,EAAOV,EAAKW,OAAS,IAAMD,EAAO,MAcjD,OAXAE,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WACNU,EAAY,sCACb,CAACA,IAEJV,qBAAU,WACNhB,EAAO4C,GAAG,UAAWN,KACtB,CAACtC,IAEA,yBAAK4B,UAAU,qBACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,SAAhB,kBACA,yBAAKA,UAAU,aACVQ,EAAYS,KAAI,SAACC,EAASC,GACvB,OAAO,yBAAKC,IAAG,gBAAWD,GAASnB,UAAU,gBAIzD,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,UAEpB,yBAAKA,UAAU,OACX,yBAAKqB,IAAI,WAAWD,IAAI,MAAME,IAAG,UArCG,8BAqCH,iBAErC,yBAAKtB,UAAU,kBACX,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,SAChB,0BAAMA,UAAU,WAGxB,0BAAMA,UAAU,SAAhB,uBAEJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAqBuB,OAAQ,QACzB,kBAAC,IAAD,CAAWtB,KAAMO,GACb,kBAAC,IAAD,CAAegB,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SAASC,UAAW,EAAGC,KAAK,SAASC,OAAQ,CAAC,EAAG,OAChE,kBAAC,IAAD,CAAOH,QAAQ,SAASC,UAAW,GAAIC,KAAK,SAASC,OAAQ,CAAC,EAAG,MACjE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIH,QAAQ,SACRI,OAAO,UACPC,YAAa,EACbC,IAAK,CAAEF,OAAQ,UAAWC,YAAa,GACvCE,KAAK,cACLC,kBAAmB,Y,2BC9F7CE,G,OAAU,IAsHDC,EAlHsB,WAAO,IAChChE,EAAWyB,qBAAWhB,GAAtBT,OACA0B,EAAgBF,IAAhBE,YAF+B,EAGXO,oBAAkB,GAHP,mBAGhCgC,EAHgC,KAGxBC,EAHwB,OAITjC,mBAAsB8B,GAJb,mBAIhCI,EAJgC,KAIvBC,EAJuB,OAKCnC,mBAAiB,GALlB,mBAKhCoC,EALgC,KAKlBC,EALkB,KAMjCxC,EAAyB,GAAhByC,KAAKC,SAAgB,EAC9BC,EACkD,8BAElDC,EAAU,WACZ,IAAMC,EAAgC,GAAvBJ,KAAKC,SAAW,IACzBI,EAAW9C,EAAS6C,EAC1BL,EAAgBL,EAASM,KAAKM,MAAMD,GAAY,GAChDR,GAAW,SAAC7B,GACR,IAAMuC,EAAU,CAAEC,MAAM,IAAIC,MAAOC,UAAWC,OAAQjB,EAASW,EAAW,GACtEO,EAAU,YAAO5C,GAGrB,OAFIA,EAAKC,OApBC,GAoBuB2C,EAAWC,KAAKN,GAC5CK,EAAU,sBAAO5C,EAAKF,MAAM,IAAlB,CAAsByC,IAC9BK,MAGT7C,EAAU,WACZ4B,GAAU,SAAC3B,GAAD,OAAoBA,MAuBlC,OApBAE,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WACN,IAAMqE,EAAWC,YAAYZ,EAAS,KACtC,OAAO,WACCW,GACAE,cAAcF,MAGvB,CAACpB,IAEJjD,qBAAU,WACNU,EAAY,iCACb,CAACA,IAEJV,qBAAU,WACNhB,EAAO4C,GAAG,UAAWN,KACtB,CAACtC,IAEA,yBAAK4B,UAAU,6BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,WACX,kBAAC,IAAD,CACI4D,MAAOnB,EACPoB,iBAAgB,UAAKpB,EAAL,QAChBqB,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,UAAW,GACXC,WAAW,YACXC,SAAS,YACTC,YAAY,UACZC,iBAAkB,EAClB9C,OAAQ,IACR+C,MAAO,IACPC,yBAA0B,IAC1BC,iBAAiB,gBAErB,0BAAMxE,UAAU,SAAhB,WACA,yBACIA,UAAS,gBAAWqC,EAAS,SAAW,IACxChB,IAAI,kBACJC,IAAG,UAAKuB,EAAL,uBAIf,yBAAK7C,UAAU,UACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,aACX,yBACIA,UAAS,gBAAWqC,EAAS,SAAW,IACxChB,IAAI,kBACJC,IAAG,UAAKuB,EAAL,qBAEP,kBAAC,IAAD,CAAqBtB,OAAQ,QACzB,kBAAC,IAAD,CAAWtB,KAAMsC,GACb,kBAAC,IAAD,CAAef,gBAAgB,QAC/B,kBAAC,IAAD,CAAOQ,KAAK,SAASN,UAxF3B,GAwFqDD,QAAQ,WACvD,kBAAC,IAAD,CAAOA,QAAQ,OAAOgD,MAAI,IAC1B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACI9C,KAAK,SACLF,QAAQ,SACRI,OAAO,UACPC,YAAa,EACbC,IAAK,CAAED,YAAa,GACpBE,KAAK,kBAIjB,0BAAMhC,UAAU,SAAhB,oBAGR,yBAAKA,UAAU,SACX,yBACIA,UAAS,gBAAWqC,EAAS,SAAW,IACxChB,IAAI,aACJC,IAAG,UAAKuB,EAAL,sBAEP,0BAAM7C,UAAU,SAAhB,YCnGD0E,G,OA3Be,WAAO,IACzB5E,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,kBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,0BAAMA,UAAU,kBAChB,yBAAKA,UAAU,eACX,wBAAIA,UAAU,QACV,wBAAIA,UAAU,QAAd,0DACA,wBAAIA,UAAU,QAAd,uBACA,wBAAIA,UAAU,QAAd,4FAIA,wBAAIA,UAAU,QAAd,4BACA,wBAAIA,UAAU,QAAd,8EAKR,0BAAMA,UAAU,yBCpBtB2E,G,OAAcC,IAAMC,IAAI,CAC1BC,KAAM,CAAEC,QAAS,EAAGC,MAAO,GAC3BC,MAAO,CAAEF,QAAS,EAAGC,MAAO,EAAGE,gBAAiB,GAAIC,cAAe,QAEjEC,EAAOR,IAAMC,IAAI,CACnBC,KAAM,CAAEC,QAAS,GACjBE,MAAO,CAAEF,QAAS,KAEhBM,EAAQT,IAAMU,KAAK,CACrBR,KAAM,CAAEC,QAAS,GACjBE,MAAO,CAAEF,QAAS,KAkDPQ,EAhDW,WAAO,IACrBzF,EAAgBF,IAAhBE,YACF+C,EACkD,6BAIxD,OAHAzD,qBAAU,WACNU,EAAY,aACb,CAACA,IAEA,yBAAKE,UAAU,SACX,kBAAC2E,EAAD,CAAa3E,UAAU,WACnB,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,UAAUpB,UAAU,SAC1B,yBAAKqB,IAAI,eAAeC,IAAG,UAAKuB,EAAL,gBAA8B7C,UAAU,UAGvE,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,MAAMpB,UAAU,SACtB,yBAAKqB,IAAI,WAAWC,IAAG,UAAKuB,EAAL,YAA0B7C,UAAU,UAG/D,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,OAAOpB,UAAU,SACvB,yBAAKqB,IAAI,YAAYC,IAAG,UAAKuB,EAAL,aAA2B7C,UAAU,UAGjE,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,WAAWpB,UAAU,SAC3B,yBAAKqB,IAAI,gBAAgBC,IAAG,UAAKuB,EAAL,iBAA+B7C,UAAU,UAGzE,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,QAAQpB,UAAU,SACxB,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,cAA4B7C,UAAU,UAGnE,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,kBAACoF,EAAD,CAAMhE,IAAI,cAAcpB,UAAU,SAC9B,yBAAKqB,IAAI,mBAAmBC,IAAG,UAAKuB,EAAL,oBAAkC7C,UAAU,UAE/E,kBAACqF,EAAD,CAAOjE,IAAI,QAAQpB,UAAU,UAC7B,yBAAKA,UAAU,QACX,yBAAKqB,IAAI,WAAWD,IAAI,MAAMpB,UAAU,OAAOsB,IAAG,UAAKuB,EAAL,kBCpDhE2C,G,OAAeZ,IAAMC,IAAI,CAC3BC,KAAM,CACFC,QAAS,GAEbE,MAAO,CACHF,QAAS,EACTG,gBAAiB,IACjBC,cAAe,IACfM,WAAY,CACRC,QAAS,CAAEC,SAAU,UAI3BC,EAAUhB,IAAMC,IAAI,CACtBC,KAAM,CACFC,QAAS,EACTc,OAAQ,GAEZZ,MAAO,CACHF,QAAS,EACTc,OAAQ,EACRJ,WAAY,CACRC,QAAS,CAAEC,SAAU,SAI3BG,EAAclB,IAAMC,IAAI,CAC1BC,KAAM,CAAEC,QAAS,GACjBE,MAAO,CAAEF,QAAS,GAClBgB,SAAU,CACNF,OAAQ,EACRb,MAAO,IACPS,WAAY,CACRC,QAAS,CAAEM,KAAM,UAAWL,SAAU,KACtCE,OAAQ,CAAEF,SAAU,OAG5BM,WAAY,CACRJ,OAAQ,EACRb,MAAO,EACPS,WAAY,CACRC,QAAS,CAAEM,KAAM,UAAWL,SAAU,KACtCE,OAAQ,CAAEF,SAAU,SAK1BO,EAA4B,CAC9B,CAAElE,KAAM,UAAWX,IAAK,WACxB,CAAEW,KAAM,QAASX,IAAK,SACtB,CAAEW,KAAM,SAAUX,IAAK,WACvB,CAAEW,KAAM,YAAaX,IAAK,mBAC1B,CAAEW,KAAM,SAAUX,IAAK,kBAwDZ8E,EAtDoB,WAAO,IAC9B/H,EAAWyB,qBAAWhB,GAAtBT,OACA0B,EAAgBF,IAAhBE,YAF6B,EAGXO,mBAAS6F,EAAQtF,OAAS,GAHf,mBAG9BO,EAH8B,KAGvBiF,EAHuB,KAM/B3C,EAAW4C,iBAAO,MAElB3F,EAAU,WACZ0F,GAAS,SAACjF,GAAD,OAAoBA,GAAS+E,EAAQtF,OAAS,EAAI,EAAIO,EAAQ,MAwB3E,OArBAN,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WAIN,OAHAU,EAAY,KAEZ2D,EAAS6C,QAAU5C,YAAYhD,EAAS,KACjC,kBAAMiD,cAAcF,EAAS6C,YACrC,CAACxG,IAEJV,qBAAU,WAENhB,EAAO4C,GAAG,WAAW,WACjB2C,cAAcF,EAAS6C,SACvB5F,SAIL,CAACtC,IAGA,yBAAK4B,UAAU,aACX,kBAAC4F,EAAD,CAAS5F,UAAU,UAAUoB,IAAI,YACjC,kBAAC,EAAD,CAAcA,IAAI,OAAOpB,UAAU,0BAC9BkG,EAAQjF,KAAI,WAAgBsF,GAAe,IAA5BvE,EAA2B,EAA3BA,KAAMX,EAAqB,EAArBA,IACZC,EAAG,UAjCgC,8BAiChC,YAAmBU,EAAnB,QACT,OACI,kBAAC8D,EAAD,CACI9F,UAAU,UACVwG,KAAMrF,IAAUoF,EAAI,WAAa,aACjCnF,IAAKE,GACL,yBAAKA,IAAKA,EAAKD,IAAKA,IACnBF,IAAUoF,GAAK,2BAAIlF,UC7EjCoF,G,OAzBgB,WAAO,IAC1B3G,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,qBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,0BAAMA,UAAU,kBAChB,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,QACV,wBAAIA,UAAU,QAAd,2CACA,wBAAIA,UAAU,QAAd,yFAEa,KAEb,wBAAIA,UAAU,QAAd,oEAKR,0BAAMA,UAAU,yBClBtB0G,G,OAAkB9B,IAAMC,IAAI,CAC9BC,KAAM,CACFC,QAAS,GAEbE,MAAO,CACHF,QAAS,EACTG,gBAAiB,QAGnByB,EAAO/B,IAAMC,IAAI,CACnBC,KAAM,CAAEC,QAAS,EAAGT,MAAO,KAC3BW,MAAO,CAAEF,QAAS,GAAKT,MAAO,MAAOmB,WAAY,CAAEmB,MAAO,IAAKjB,SAAU,QAEvEkB,EAAgBjC,IAAMC,IAAI,CAC5BC,KAAM,CAAEC,QAAS,EAAG+B,QAAS,UAC7B7B,MAAO,CAAEF,QAAS,EAAG+B,QAAS,UA6FnBC,EA3FU,WAAO,IACpBjH,EAAgBF,IAAhBE,YACF+C,EACmD,8BAIzD,OAHAzD,qBAAU,WACNU,EAAY,+BACb,CAACA,IAEA,yBAAKE,UAAU,gBACX,kBAAC2G,EAAD,CAAMvF,IAAI,OAAOpB,UAAU,cAC3B,kBAAC0G,EAAD,CAAiBtF,IAAI,QAAQpB,UAAU,WACnC,kBAAC2G,EAAD,CAAMvF,IAAI,aAAapB,UAAU,cACjC,kBAAC6G,EAAD,CAAezF,IAAI,eAAepB,UAAU,SACxC,uBAAGA,UAAU,SAAb,kBACA,yBAAKA,UAAU,eACX,uCAEI,6BAFJ,QAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,oBACzB,2CAEI,6BAFJ,SAOR,kBAACgE,EAAD,CAAezF,IAAI,eAAepB,UAAU,SACxC,uBAAGA,UAAU,SAAb,aACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,OAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,oBACzB,2CAEI,6BAFJ,UAOR,kBAACgE,EAAD,CAAezF,IAAI,eAAepB,UAAU,UACxC,uBAAGA,UAAU,SAAb,0BAGR,kBAAC0G,EAAD,CAAiBtF,IAAI,SAASpB,UAAU,WACpC,kBAAC2G,EAAD,CAAMvF,IAAI,cAAcpB,UAAU,cAClC,kBAAC6G,EAAD,CAAezF,IAAI,gBAAgBpB,UAAU,SACzC,uBAAGA,UAAU,SAAb,WACA,yBAAKA,UAAU,eACX,0CAEI,6BAFJ,SAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,kBACzB,2CAEI,6BAFJ,SAOR,kBAACgE,EAAD,CAAezF,IAAI,gBAAgBpB,UAAU,SACzC,uBAAGA,UAAU,SAAb,aACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,OAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,oBACzB,2CAEI,6BAFJ,UAOR,kBAACgE,EAAD,CAAezF,IAAI,gBAAgBpB,UAAU,UACzC,uBAAGA,UAAU,SAAb,uBC5FdC,G,OAAO,CACT,CACI+G,GAAI,EACJC,EAAG,MAEP,CACID,GAAI,GACJC,EAAG,MAEP,CACID,GAAI,GACJC,EAAG,OAEP,CACID,GAAI,GACJC,EAAG,OAEP,CACID,GAAI,GACJC,EAAG,MAEP,CACID,GAAI,GACJC,EAAG,QAgCIC,EA5BiB,WAAO,IAC3BpH,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,sBACb,CAACA,IAEA,yBAAKE,UAAU,uBACX,kBAAC,IAAD,CAAqBuB,OAAQ,OACzB,kBAAC,IAAD,CAAWtB,KAAMA,GACb,kBAAC,IAAD,CAAeuB,gBAAgB,QAC/B,kBAAC,IAAD,CAAOQ,KAAK,MAAMN,UAAW,GAAIC,KAAK,SAASC,OAAQ,CAAC,EAAG,eAAgBH,QAAQ,OACnF,kBAAC,IAAD,CAAOO,KAAK,UACZ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIL,KAAK,SACLF,QAAQ,IACRI,OAAO,UACPC,YAAa,EACbC,IAAK,CAAED,YAAa,GACpBE,KAAK,oBCvDvBwD,G,OAAeZ,IAAMuC,GAAG,CAC1BrC,KAAM,CACFC,QAAS,GAEbE,MAAO,CACHF,QAAS,EACTG,gBAAiB,QAGnBkC,EAAexC,IAAMyC,GAAG,CAC1BvC,KAAM,CAAEC,QAAS,EAAGuC,QAAS,UAC7BrC,MAAO,CAAEF,QAAS,EAAGuC,QAAS,UA6BnBC,EA3BU,WAAO,IACpBzH,EAAgBF,IAAhBE,YACF+C,EAAgE,6BAItE,OAHAzD,qBAAU,WACNU,EAAY,wBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,kBAAC,EAAD,CAAcA,UAAU,eACpB,kBAACoH,EAAD,CAAchG,IAAI,SAASpB,UAAU,eACjC,yBAAKqB,IAAI,aAAarB,UAAU,OAAOsB,IAAG,UAAKuB,EAAL,iBAC1C,0BAAM7C,UAAU,QAAhB,UAEJ,kBAACoH,EAAD,CAAchG,IAAI,QAAQpB,UAAU,SAChC,yBAAKA,UAAU,OAAOqB,IAAI,eAAeC,IAAG,UAAKuB,EAAL,gBAC5C,0BAAM7C,UAAU,QAAhB,YAEJ,kBAACoH,EAAD,CAAchG,IAAI,QAAQpB,UAAU,SAChC,yBAAKA,UAAU,OAAOqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,sBAC1C,0BAAM7C,UAAU,QAAhB,WAGR,+BCNGwH,G,OA/Bc,WAAO,IACxB1H,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,6BACb,CAACA,IAEA,yBAAKE,UAAU,SACX,0BAAMA,UAAU,kBAChB,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QACV,wBAAIA,UAAU,QAAd,gIAIA,wBAAIA,UAAU,QAAd,sBACA,wBAAIA,UAAU,QAAd,wDACA,wBAAIA,UAAU,QAAd,uFAIA,wBAAIA,UAAU,QAAd,iGAMR,0BAAMA,UAAU,yBCzBtB0G,G,OAAkB9B,IAAMC,IAAI,CAC9BC,KAAM,CACFC,QAAS,GAEbE,MAAO,CACHF,QAAS,EACTG,gBAAiB,QAGnByB,EAAO/B,IAAMC,IAAI,CACnBC,KAAM,CAAEC,QAAS,EAAGT,MAAO,KAC3BW,MAAO,CAAEF,QAAS,GAAKT,MAAO,MAAOmB,WAAY,CAAEmB,MAAO,IAAKjB,SAAU,QAEvEkB,GAAgBjC,IAAMC,IAAI,CAC5BC,KAAM,CAAEC,QAAS,EAAG+B,QAAS,UAC7B7B,MAAO,CAAEF,QAAS,EAAG+B,QAAS,UA8FnBW,GA3FW,WAAO,IACrB3H,EAAgBF,IAAhBE,YACF+C,EACmD,8BAIzD,OAHAzD,qBAAU,WACNU,EAAY,8BACb,CAACA,IAEA,yBAAKE,UAAU,iBACX,kBAAC,EAAD,CAAMoB,IAAI,OAAOpB,UAAU,cAC3B,kBAAC,EAAD,CAAiBoB,IAAI,QAAQpB,UAAU,WACnC,kBAAC,EAAD,CAAMoB,IAAI,aAAapB,UAAU,cACjC,kBAAC,GAAD,CAAeoB,IAAI,eAAepB,UAAU,UACxC,uBAAGA,UAAU,SAAb,mBAEJ,kBAAC,GAAD,CAAeoB,IAAI,eAAepB,UAAU,SACxC,uBAAGA,UAAU,SAAb,aACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,OAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,oBACzB,2CAEI,6BAFJ,SAOR,kBAAC,GAAD,CAAezB,IAAI,eAAepB,UAAU,SACxC,uBAAGA,UAAU,SAAb,iCACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,OAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,iBACzB,+CAEI,6BAFJ,eAQZ,kBAAC,EAAD,CAAiBzB,IAAI,SAASpB,UAAU,WACpC,kBAAC,EAAD,CAAMoB,IAAI,cAAcpB,UAAU,cAClC,kBAAC,GAAD,CAAeoB,IAAI,gBAAgBpB,UAAU,UACzC,uBAAGA,UAAU,SAAb,4BAEJ,kBAAC,GAAD,CAAeoB,IAAI,gBAAgBpB,UAAU,SACzC,uBAAGA,UAAU,SAAb,aACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,QAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,oBACzB,2CAEI,6BAFJ,UAQR,kBAAC,GAAD,CAAezB,IAAI,gBAAgBpB,UAAU,SACzC,uBAAGA,UAAU,SAAb,sBACA,yBAAKA,UAAU,eACX,2CAEI,6BAFJ,OAKA,yBAAKqB,IAAI,aAAaC,IAAG,UAAKuB,EAAL,iBACzB,uCAEI,6BAFJ,aCtET6E,I,OA5BgB,WAAO,IAC1B5H,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,oBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,0BAAMA,UAAU,kBAChB,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,QACV,wBAAIA,UAAU,QAAd,sHAIA,wBAAIA,UAAU,QAAd,4FAIA,wBAAIA,UAAU,QAAd,8CACA,wBAAIA,UAAU,QAAd,4BACA,wBAAIA,UAAU,QAAd,iCAGR,0BAAMA,UAAU,yBCrBtB2H,I,OAAa/C,IAAMC,IAAI,CACzBC,KAAM,CAAEC,QAAS,EAAG+B,QAAS,SAAWrB,WAAY,CAAEE,SAAU,IAAKiB,MAAO,MAC5E3B,MAAO,CAAEF,QAAS,EAAG+B,QAAS,OAAQrB,WAAY,CAAEE,SAAU,IAAKiB,MAAO,SAwC/DgB,GArCa,WAAO,IACvB9H,EAAgBF,IAAhBE,YAMR,OAHAV,qBAAU,WACNU,EAAY,kCACb,CAACA,IAEA,yBAAKE,UAAU,qBACX,kBAAC,GAAD,CAAYoB,IAAI,kBAAkBpB,UAAU,WACxC,yBAAKsB,IAAG,UAPqC,8BAOrC,kBACR,yBAAKtB,UAAU,QACX,uBAAGA,UAAU,SAAb,eACA,wBAAIA,UAAU,QACV,wBAAIA,UAAU,aAAd,SACA,wBAAIA,UAAU,aAAd,eACA,wBAAIA,UAAU,aAAd,kBACA,wBAAIA,UAAU,YAAd,eAIZ,kBAAC,GAAD,CAAYoB,IAAI,oBAAoBpB,UAAU,WAC1C,yBAAKA,UAAU,QACX,uBAAGA,UAAU,SAAb,mBACA,wBAAIA,UAAU,QACV,wBAAIA,UAAU,aAAd,YACA,wBAAIA,UAAU,aAAd,kBACA,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,YAAd,iBAGR,yBAAKsB,IAAG,UA5BqC,8BA4BrC,qB,WCjCHsD,IAAMuC,GAAG,CAC1BrC,KAAM,CAAEC,QAAS,EAAGxD,OAAQ,GAC5B0D,MAAO,CACHF,QAAS,EACTxD,OAAQ,QAEZ0E,WAAY,CACR4B,SAAU,SACVvD,MAAO,OACP/C,OAAQ,OACRuG,MAAM,GAEV/B,SAAU,CACN8B,SAAU,QACVvD,MAAO,OACPyD,KAAM,EACNC,OAAQ,EACRF,MAAM,K,2BCcCG,GAvCD,CACVC,IACI,oMACJC,SACI,kHACJC,SAAU,mDACVC,UAAW,mDACXC,IACI,sIACJC,YACI,wVACJ3J,QACI,6HACJ4J,SACI,gHACJC,KAAM,kEACNvI,OACI,kQACJwI,SACI,6sBACJC,OACI,wgBACJC,QACI,qNACJC,MACI,0WACJC,OAAQ,+EACRC,QACI,4nBACJC,YACI,kMACJC,YACI,iHACJC,KACI,sJACJC,OACI,0rU,sOC3BR,IAAMC,GAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChCC,aAAM,CACFF,KAAM,EACNC,GAAI,EACJ3D,SAAU,MACX6D,KAAKC,uBAAYJ,EAAMC,KAExBI,GAAQC,OAAOC,QAAQ3B,IAAO4B,QAAO,SAACC,EAAD,GAA0B,IAAD,mBAAhB9H,EAAgB,KAC1D+H,EAAO,CACTC,EAF4D,KAG5DvE,WAAY2D,IAEhB,O,4VAAO,CAAP,GAAYU,EAAZ,gBAAoB9H,EAAO+H,MAC5B,IAEGE,GAAOrF,IAAMsF,KAAKR,IAsBTS,yBAbuB,SAAC,EAAoCC,GAAS,IAA3CpK,EAA0C,EAA1CA,UAAW+J,EAA+B,EAA/BA,KAAMxI,EAAyB,EAAzBA,OAAQ+C,EAAiB,EAAjBA,MAC9D,OACI,yBACI8F,IAAKA,EACLpK,UAAS,uBAAkBA,GAC3BsE,MAAOA,EACP/C,OAAQA,EACR8I,QAAQ,cACR,kBAACJ,GAAD,CAAMzD,KAAMuD,QCbT5D,I,OAvBoB,WAAO,IAC9BrG,EAAgBF,IAAhBE,YAD6B,EAETO,oBAAS,GAFA,mBAE9BiK,EAF8B,KAEtBC,EAFsB,KAG/B7J,EAAU,WACZ6J,GAAU,SAAC5J,GACP,OAAQA,MAWhB,OAPAE,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WACNU,EAAY,kBACb,CAACA,IAEA,yBAAKE,UAAU,SACX,kBAAC,GAAD,CAAcsE,MAAO,IAAK/C,OAAQ,GAAIwI,KAAOO,EAAS,SAAW,YCe9DE,I,OAlCS,WAAO,IACnB1K,EAAgBF,IAAhBE,YACF+C,EAAgE,6BAItE,OAHAzD,qBAAU,WACNU,EAAY,qCACb,CAACA,IAEA,yBAAKE,UAAU,SACX,uBAAGA,UAAU,cAAb,wEAGA,yBAAKA,UAAU,UACX,yCACA,6BACA,6BACI,yBAAKA,UAAU,SAASqB,IAAI,cAAcC,IAAG,UAAKuB,EAAL,iBADjD,uBAIA,6BACI,yBAAK7C,UAAU,SAASqB,IAAI,cAAcC,IAAG,UAAKuB,EAAL,iBADjD,mBAIA,0CACA,6BACA,6BACI,yBAAK7C,UAAU,kBAAkBqB,IAAI,cAAcC,IAAG,UAAKuB,EAAL,0BAD1D,sBAKJ,gCC3BN4H,I,OAAW,CACb,CACIV,KAAM,SACNtK,MAAO,kBACPiL,KACI,8FACJC,SAAU,CAAC,4BAA6B,kBAAmB,yBAE/D,CACIZ,KAAM,WACNtK,MAAO,SACPiL,KAAM,+EACNC,SAAU,CAAC,UAAW,iBAAkB,eAE5C,CACIZ,KAAM,YACNtK,MAAO,wBACPiL,KAAM,iEAEV,CACIX,KAAM,MACNtK,MAAO,gBACPiL,KAAM,kEACNC,SAAU,CAAC,oBAAkB,WAAY,aAE7C,CACIZ,KAAM,UACNtK,MAAO,cACPiL,KAAM,+DAEV,CACIX,KAAM,OACNtK,MAAO,mBACPiL,KAAM,+DACNC,SAAU,CAAC,WAAY,qBAAsB,kBAI/CC,GAAShG,IAAMC,IAAI,CACrBxC,OAAQ,CACJwI,EAAG,gBAAGA,EAAH,EAAGA,EAAH,gBAAcA,EAAd,MACHpF,WAAY,CACRE,SAAU,QAiDPmF,GA7CS,WAAO,IACnBhL,EAAgBF,IAAhBE,YACA1B,EAAWyB,qBAAWhB,GAAtBT,OAFkB,EAGAiC,mBAAS,GAHT,mBAGnBc,EAHmB,KAGZiF,EAHY,KAIpB2E,EAAUN,GAAStJ,GAJC,EAKA4J,EAAlBJ,gBALkB,MAKP,GALO,EAMpBE,EAAK,GAAKJ,GAAS7J,QAAWO,EAAQ,GAEtCT,EAAU,WACZ0F,GAAS,SAACjF,GAAD,OAAoBA,GAASsJ,GAAS7J,OAAS,EAAI,EAAIO,EAAQ,MAa5E,OAXAN,EAAW,CACPC,KAAMJ,EACNK,MAAOL,IAEXtB,qBAAU,WACNU,EAAY,mCACb,CAACA,IACJV,qBAAU,WACNhB,EAAO4C,GAAG,UAAWN,KACtB,CAACtC,IAGA,yBAAK4B,UAAU,gBACX,0BAAMA,UAAU,kBAChB,kBAAC4K,GAAD,CAAQI,QAASH,EAAGrE,KAAM,SAAUxG,UAAU,SAAS6K,EAAGA,GACtD,kBAAC,GAAD,CAAcvG,MAAO,IAAK/C,OAAQ,IAAKwI,KAAMgB,EAAQhB,QAEzD,0BAAM/J,UAAU,QAChB,yBAAKA,UAAU,eACX,uBAAGA,UAAU,SAAS+K,EAAQtL,OAC9B,yBAAKO,UAAU,QAAQ+K,EAAQL,MAC9BC,EAAS/J,OAAS,GACf,wBAAIZ,UAAU,YACT2K,EAAS1J,KAAI,SAACgK,GAAD,OACV,wBAAIjL,UAAU,QAAQiL,QAKtC,0BAAMjL,UAAU,wBCvFtBC,I,OAAO,CACT,CAAEiL,MAAO,IAAK5H,OAAQ,IACtB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,IAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,IAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,IAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,IACvB,CAAE4H,MAAO,KAAM5H,OAAQ,MAuEZwH,GApES,WAAO,IACnBhL,EAAgBF,IAAhBE,YAMR,OAHAV,qBAAU,WACNU,EAAY,yBACb,CAACA,IAEA,yBAAKE,UAAU,UACX,0BAAMA,UAAU,kBAChB,yBAAKA,UAAU,SACX,wBAAIA,UAAU,QACV,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CACI4D,MAAO,GACPC,iBAAgB,UAAK,GAAL,QAChBC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,UAAW,GACXC,WAAW,YACXC,SAAS,YACTC,YAAY,UACZC,iBAAkB,EAClBC,MAAO,IACP/C,OAAQ,IACRgD,yBAA0B,IAC1BC,iBAAiB,iBAGzB,yBAAKxE,UAAU,WAAf,qDAEJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKqB,IAAI,aAAaC,IAAG,UAhCO,6BAgCP,cAA4BtB,UAAU,UAEnE,yBAAKA,UAAU,WAAf,0FAEJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKqB,IAAI,aAAaC,IAAG,UAtCO,6BAsCP,cAA4BtB,UAAU,UAEnE,yBAAKA,UAAU,WAAf,mDAEJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAWsE,MAAO,IAAK/C,OAAQ,IAAKtB,KAAMA,IACtC,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACI0B,KAAK,WACLF,QAAQ,SACRI,OAAO,UACPC,YAAa,EACbC,IAAK,CAAED,YAAa,OAIhC,yBAAK9B,UAAU,WAAf,qCAIZ,0BAAMA,UAAU,wB,UC5DbmL,I,cAhBS,WACpB,IAEQrL,EAAgBF,IAAhBE,YAIR,OAHAV,qBAAU,WACNU,EAAY,OACb,CAACA,IAEA,yBAAKE,UAAU,SACX,kBAAC,UAAD,CAAQoL,UAAQ,EAAC9J,IAAG,UAP6B,8BAO7B,qBAChB,kBAAC,cAAD,CAAY+J,mBAAiB,QCQ9B9D,I,OAxBU,WAAO,IACpBzH,EAAgBF,IAAhBE,YAMR,OAHAV,qBAAU,WACNU,EAAY,0EACb,CAACA,IAEA,yBAAKE,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OAAOqB,IAAI,WAAWC,IAAG,UARA,6BAQA,gBAD5C,6CAIA,yBAAKtB,UAAU,OAAf,oBAEI,yBAAKA,UAAU,OAAOqB,IAAI,WAAWC,IAAG,UAbA,6BAaA,kBAGhD,gCCDCgK,GAAY,CACrB,QACA,UACA,cACA,oBACA,QACA,UACA,eACA,aAEA,aACA,SACA,UAGA,sBACA,mBACA,sBAEA,QACA,eACA,cACA,UC6MWC,I,OAnNO,WAClB,IAAMC,EAAYnF,iBAAO,MACnBoF,EAAapF,iBAAO,MAFF,EAGOzG,IAAvBH,EAHgB,EAGhBA,MAAOK,EAHS,EAGTA,YACT4L,EAAUC,cACVC,EAAWC,cACTzN,EAAWyB,qBAAWhB,GAAtBT,OANgB,EAOMiC,mBAAS,GAPf,mBAOjByL,EAPiB,KAORC,EAPQ,KASlBlJ,EACkD,6BAElDmJ,EAAa,WACXP,GAAcA,EAAWnF,SAA+C,oBAA7BmF,EAAWnF,QAAQ2F,OAC9DR,EAAWnF,QAAQ2F,SAErBC,EAAY,WACVV,GAAaA,EAAUlF,SAA8C,oBAA5BkF,EAAUlF,QAAQ2F,OAC3DT,EAAUlF,QAAQ2F,SAgD1B,OA9CApL,EAAW,CACPsL,UAAWD,IAEfrL,EAAW,CACPuL,WAAYJ,IAGhB5M,qBAAU,WAEN,IAAMiN,EAAQT,EAASU,SAASC,QAAQ,IAAK,IAEvCpL,EAAQmK,GAAUkB,QAAQH,IAEjB,IAAXlL,GAAcrB,EAAY,mCAE9B,IAAMlB,EAAkB,CACpBuC,MAAOA,GAAS,EAAIA,EAAQ,EAC5BkL,SAEJjO,EAAOO,KAAK,SAAUC,KACvB,CAACgN,EAAU9L,EAAa1B,IAE3BgB,qBAAU,WAENhB,EAAO4C,GAAG,WAAW,YACD,SADuC,EAAnCyL,QACIT,IACnBE,OAGT9N,EAAO4C,GAAG,YAAY,SAAC0L,GAAwB,IAAD,EACpBA,EAAdvL,MAEFwL,EAAK,WAAOrB,QAHwB,MAC1B,EAD0B,IAI1CI,EAAQlI,KAAKmJ,QAElB,CAACjB,EAAStN,IACbgB,qBAAU,WAENhB,EAAO4C,GAAG,YAAY,WAClB5C,EAAOO,KAAK,QAAS2M,GAAU1K,WAGnCxC,EAAO4C,GAAG,WAAW,SAAA8K,GACjBC,EAAWD,QAEhB,CAAC1N,IAEA,yBAAK4B,UAAU,OACX,kBAAC,IAAD,CACI4M,OAAQ,YAAmB,IAAhBhB,EAAe,EAAfA,SACCU,EAAaV,EAAbU,SACFnL,EAAQmK,GAAUkB,QAAQF,EAASC,QAAQ,IAAK,KAChDM,EAAYvB,GAAUnK,EAAQ,IAAM,GACpC2L,EAAYxB,GAAUnK,EAAQ,IAAM,GACpC4L,EAAWC,OAAOD,UAAY,YACpC,OACI,kBAAC,IAAD,KACI,kBAACE,GAAD,CACIjN,UAAU,SACVoB,IAAI,SACJoF,MAAiB,IAAXrF,EAAe,WAAa,aACjC1B,GAEL,kBAACyN,GAAD,CAAgB9L,IAAG,yBAAoBwK,EAASxK,MAC5C,kBAAC,IAAD,CAAQwK,SAAUA,EAAUxK,IAAK,UAC7B,kBAAC,IAAD,CAAO8I,KAAI,SAAYiD,UAAWpN,EAAOqB,IAAI,UAC7C,kBAAC,IAAD,CACI8I,KAAI,oBACJiD,UAAW/M,EACXgB,IAAI,qBAER,kBAAC,IAAD,CACI8I,KAAI,uBACJiD,UAAWjL,EACXd,IAAI,wBAER,kBAAC,IAAD,CACI8I,KAAI,uBACJiD,UAAW/K,EACXhB,IAAI,wBAER,kBAAC,IAAD,CAAO8I,KAAI,WAAciD,UAAW5H,EAASnE,IAAI,YACjD,kBAAC,IAAD,CACI8I,KAAI,eACJiD,UAAWzI,EACXtD,IAAI,gBAER,kBAAC,IAAD,CACI8I,KAAI,cACJiD,UAAWxF,GACXvG,IAAI,eAER,kBAAC,IAAD,CACI8I,KAAI,qBACJiD,UAAWhH,EACX/E,IAAI,sBAGR,kBAAC,IAAD,CACI8I,KAAI,gBACJiD,UAAW1G,EACXrF,IAAI,iBAER,kBAAC,IAAD,CAAO8I,KAAI,UAAaiD,UAAWpG,EAAQ3F,IAAI,WAC/C,kBAAC,IAAD,CACI8I,KAAI,iBACJiD,UAAWjG,EACX9F,IAAI,kBAER,kBAAC,IAAD,CACI8I,KAAI,eACJiD,UAAWC,EACXhM,IAAI,gBAER,kBAAC,IAAD,CACI8I,KAAI,cACJiD,UAAW3F,EACXpG,IAAI,eAER,kBAAC,IAAD,CAAO8I,KAAI,WAAciD,UAAW1F,GAASrG,IAAI,YACjD,kBAAC,IAAD,CACI8I,KAAI,gBACJiD,UAAWzF,GACXtG,IAAI,iBAER,kBAAC,IAAD,CAAO8I,KAAI,WAAciD,UAAWE,GAASjM,IAAI,YACjD,kBAAC,IAAD,CAAO8I,KAAI,SAAYiD,UAAWG,GAAOlM,IAAI,UAC7C,kBAAC,IAAD,CAAO8I,KAAI,UAAaiD,UAAWI,GAAQnM,IAAI,WAC/C,kBAAC,IAAD,CAAO8I,KAAI,SAAYiD,UAAW3C,GAAOpJ,IAAI,UAC7C,kBAAC,IAAD,CAAO8I,KAAI,SAAYiD,UAAWhC,GAAO/J,IAAI,UAC7C,kBAAC,IAAD,CAAO8I,KAAI,WAAciD,UAAW5F,GAAQnG,IAAI,cAGxD,kBAACoM,GAAD,CACIpM,IAAI,WACJpB,UAAU,WACVwG,MAAiB,IAAXrF,EAAe,WAAa,aACjCA,GAAS,GACN,kBAAC,IAAD,CAAMiJ,IAAKoB,EAAWiC,GAAG,aAAanE,GAAE,WAAMwD,IAC1C,yBACIzL,IAAI,mBACJrB,UAAU,OACVsB,IAAG,UAAKuB,EAAL,uBAId1B,GAAS,GAAK,0BAAMnB,UAAU,SAASmB,GACvCA,EAAQmK,GAAU1K,QACf,kBAAC,IAAD,CACIwJ,IAAKqB,EACLnC,GAAE,WAAMuD,GACR7M,UAAU,gBACTmB,GAAS,EACN,yBACIE,IAAI,mBACJC,IAAG,UAAKuB,EAAL,sBAGP,yBAAK7C,UAAU,eACV,IACD,kBAAC,IAAD,CACI0N,MAAM,IACNC,QAAQ,UACRC,KAAM,IACNC,QAAQ,YACRjK,MAAK,iBAAYmJ,EAAZ,mBAET,uBAAG/M,UAAU,YAAb,oBACA,yBAAKA,UAAU,WACV,IAAI8N,MAAMhC,GAASiC,KAAK,GAAG9M,KAAI,SAACC,EAAGqF,GAAJ,OAC5B,yBACInF,IAAG,gBAAWmF,GACdlF,IAAI,kBACJC,IAAG,UAAKuB,EAAL,gCAanD,yBAAK7C,UAAU,UAOrBkN,GAAiBtI,IAAMC,IAAI,CAC7BI,MAAO,CACHF,QAAS,EACTgD,KAAM,EACNtC,WAAY,CACRC,QAAS,CAAEC,SAAU,KACrBqI,gBAAgB,IAGxBlJ,KAAM,CAAEC,QAAS,EAAGgD,KAAM,UAGxBkF,GAASrI,IAAMU,KAAK,CACtB2I,UAAW,CACPC,SAAU,MACV3M,OAAQ,OACRkE,WAAY,CAAEE,SAAU,MAE5BwI,SAAU,CACND,SAAU,MACV3M,OAAQ,OACRkE,WAAY,CAAEE,SAAU,QAG1B6H,GAAW5I,IAAMC,IAAI,CACvBoJ,UAAW,CACP1M,OAAQ,MACRkE,WAAY,CAAEE,SAAU,MAE5BwI,SAAU,CACN5M,OAAQ,OACRkE,WAAY,CAAEE,SAAU,QC9QZyI,QACW,cAA7BpB,OAAOpB,SAASyC,UAEe,UAA7BrB,OAAOpB,SAASyC,UAEhBrB,OAAOpB,SAASyC,SAASC,MACvB,2DCVNC,IAAS3B,OACL,kBAAC,IAAD,CAAe4B,SAAUC,wBACrB,mB/BiBsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC3BrO,mBAAiBsO,IAAG,0BAA9BvQ,EADqC,oBAQtCwQ,EAAU,CAAExQ,SAAQE,SAHT,SAACC,EAAesQ,GAC7BzQ,EAAO4C,GAAGzC,EAAOsQ,IAEelQ,KANvB,SAACJ,EAAeK,GACzBR,EAAOO,KAAKJ,EAAOK,KAMvB,OAAO,kBAACC,EAAciQ,SAAf,CAAwBlL,MAAOgL,GAAUF,K+B1B5C,KACI,mB7BAoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAAe,EACpBrO,mBAAS,mCADW,mBAGxC0O,EAAe,CACjBtP,MAJ0C,KAK1CC,SAL0C,MAQ9C,OAAO,kBAACF,EAAasP,SAAd,CAAuBlL,MAAOmL,GAAeL,K6BR5C,KACI,kBAAC,GAAD,SAIZrP,SAAS2P,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c0c0bcbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport io, { Socket } from 'socket.io-client';\n\nexport interface Update {\n    slide: string;\n    index: number;\n}\nexport interface Shortcut {\n    index: number;\n}\nexport type Message = string | Shortcut | Update;\nexport type onMessage = (message) => void;\n\nexport interface SocketContext {\n    socket: Socket;\n    suscribe: (event: string, onmessage: onMessage) => void;\n    emit: (event: string, message: Message) => void;\n}\n\nexport const voidContext: SocketContext = {\n    socket: Socket,\n    suscribe: (event: string, onmessage: onMessage) => console.warn('undefined'),\n    emit: (event: string, message: Message) => console.warn('undefined'),\n};\n\nexport const SocketContext = React.createContext(voidContext);\n\nexport const SocketProvider = ({ children }) => {\n    const [socket] = useState<Socket>(io('http://localhost:3002'));\n    const emit = (event: string, message: Message) => {\n        socket.emit(event, message);\n    };\n    const suscribe = (event: string, onMessage: onMessage) => {\n        socket.on(event, onMessage);\n    };\n    const context = { socket, suscribe, emit };\n    return <SocketContext.Provider value={context}>{children}</SocketContext.Provider>;\n};\n","import { useEffect } from 'react';\n\ninterface KeyHandlers {\n    [key: string]: (event?: React.SyntheticEvent) => void;\n}\n\nconst useKeydown = (keyMap: KeyHandlers) => {\n    const keyHandler = event => keyMap[event.code] && keyMap[event.code](event);\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyHandler);\n\n        return () => document.removeEventListener('keydown', keyHandler);\n    });\n};\n\nexport default useKeydown;\n","import React, { useState} from 'react';\ninterface TitleContext {\n    title: string;\n    setTitle: (newTitle: string) => void;\n}\nconst voidContext: TitleContext = {\n    title: '',\n    setTitle: newTitle => {},\n};\nconst TitleContext = React.createContext<TitleContext>(voidContext);\n\nconst TitleProvider: React.FC = ({ children }) => {\n    const [title, setTitle] = useState('Proyecto final de ingeniería');\n\n    const TitleHandler = {\n        title,\n        setTitle,\n    };\n\n    return <TitleContext.Provider value={TitleHandler}>{children}</TitleContext.Provider>;\n};\n\nexport { TitleContext, TitleProvider };\n","import { TitleContext } from '../context/Title';\nimport { useContext } from 'react';\n\ninterface Handler {\n    title: string;\n    updateTitle: (newTitle: string) => void;\n}\n\nconst useTitle = () => {\n    const { title, setTitle } = useContext(TitleContext);\n    const updateTitle = (newTitle: string) => {\n        if (newTitle) setTitle(newTitle);\n    };\n    return {\n        title,\n        updateTitle,\n    };\n};\n\nexport default useTitle;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Break.scss';\nconst Break: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('noencontreicono');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <h1>Break</h1>\n        </div>\n    );\n};\n\nexport default Break;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationCell.scss';\ntype Data = { weight: number; output: number };\nconst data: Array<Data> = [\n    {\n        weight: 5,\n        output: 0.768,\n    },\n    {\n        weight: 10,\n        output: 0.979,\n    },\n    {\n        weight: 15,\n        output: 1.218,\n    },\n    {\n        weight: 25,\n        output: 1.663,\n    },\n    {\n        weight: 35,\n        output: 2.08,\n    },\n    {\n        weight: 45,\n        output: 2.53,\n    },\n];\n\nconst CalibrationCell: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [step, setStep] = useState<number>(0);\n    const visibleData = data.slice(0, step);\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/images';\n\n    const iterate = (): void => {\n        setStep((prev: number) => {\n            return prev < data.length - 1 ? ++prev : 0;\n        });\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Metodo empleado - Celda de carga');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration\">\n            <div className=\"left\">\n                <span className=\"label\">Celda de carga</span>\n                <div className=\"load-cell\">\n                    {visibleData.map((_: Data, index: number) => {\n                        return <div key={`weight${index}`} className=\"weight\" />;\n                    })}\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"console\">\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                    <div className=\"cpu\">\n                        <img alt=\"cpu-icon\" key=\"cpu\" src={`${urlPrefix}/cpu-2.png`} />\n                    </div>\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                </div>\n                <span className=\"label\">Circuito adaptador</span>\n            </div>\n            <div className=\"right\">\n                <div className=\"chart\">\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={visibleData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis dataKey=\"output\" tickCount={6} type=\"number\" domain={[0, 2.5]} />\n                            <XAxis dataKey=\"weight\" tickCount={12} type=\"number\" domain={[0, 40]} />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                dataKey=\"output\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={2}\n                                dot={{ stroke: '#7f2b32', strokeWidth: 3 }}\n                                name=\"Torque [Kg]\"\n                                animationDuration={400}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationCell;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationEncoder.scss';\ntype Data = { weight: number; output: number };\nconst data: Array<Data> = [\n    {\n        weight: 5,\n        output: 0.768,\n    },\n    {\n        weight: 10,\n        output: 0.979,\n    },\n    {\n        weight: 15,\n        output: 1.218,\n    },\n    {\n        weight: 25,\n        output: 1.663,\n    },\n    {\n        weight: 35,\n        output: 2.08,\n    },\n    {\n        weight: 45,\n        output: 2.53,\n    },\n];\n\nconst CalibrationEncoder: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [step, setStep] = useState<number>(0);\n    const visibleData = data.slice(0, step);\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/images';\n\n    const iterate = (): void => {\n        setStep((prev: number) => {\n            return prev < data.length - 1 ? ++prev : 0;\n        });\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Metodo empleado - Celda de carga');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration\">\n            <div className=\"left\">\n                <span className=\"label\">Celda de carga</span>\n                <div className=\"load-cell\">\n                    {visibleData.map((_: Data, index: number) => {\n                        return <div key={`weight${index}`} className=\"weight\" />;\n                    })}\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"console\">\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                    <div className=\"cpu\">\n                        <img alt=\"cpu-icon\" key=\"cpu\" src={`${urlPrefix}/cpu-2.png`} />\n                    </div>\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                </div>\n                <span className=\"label\">Circuito adaptador</span>\n            </div>\n            <div className=\"right\">\n                <div className=\"chart\">\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={visibleData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis dataKey=\"output\" tickCount={6} type=\"number\" domain={[0, 2.5]} />\n                            <XAxis dataKey=\"weight\" tickCount={12} type=\"number\" domain={[0, 40]} />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                dataKey=\"output\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={2}\n                                dot={{ stroke: '#7f2b32', strokeWidth: 3 }}\n                                name=\"Torque [Kg]\"\n                                animationDuration={400}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationEncoder;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ReactSpeedometer from 'react-d3-speedometer';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationMethods.scss';\n\ntype Data = { time: number; torque: number };\nconst initial = [];\nconst datasetLength = 15;\n\n\nconst CalibrationMethods: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [active, setActive] = useState<boolean>(false);\n    const [dataset, setDataset] = useState<Array<Data>>(initial);\n    const [currentValue, setCurrentValue] = useState<number>(0);\n    const weight = Math.random() * 30 + 5;\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/images';\n\n    const addData = (): void => {\n        const noise = (Math.random() - 0.5) * 2;\n        const newValue = weight + noise;\n        setCurrentValue(active ? Math.round(newValue) : 0);\n        setDataset((prev: Array<Data>) => {\n            const newData = { time: new Date().getTime(), torque: active ? newValue : 0 };\n            let newDataset = [...prev];\n            if (prev.length < datasetLength) newDataset.push(newData);\n            else newDataset = [...prev.slice(1), newData];\n            return newDataset;\n        });\n    };\n    const iterate = () => {\n        setActive((prev: boolean) => !prev);\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        const interval = setInterval(addData, 250);\n        return () => {\n            if (interval) {\n                clearInterval(interval);\n            }\n        };\n    }, [active]);\n\n    useEffect(() => {\n        updateTitle('Métodos de validación');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration-methods\">\n            <div className=\"left\">\n                <div className=\"balance\">\n                    <ReactSpeedometer\n                        value={currentValue}\n                        currentValueText={`${currentValue} Kg.`}\n                        maxValue={50}\n                        minValue={0}\n                        segments={3}\n                        ringWidth={20}\n                        startColor=\"#1d3f3b45\"\n                        endColor=\"#1d3f3bcc\"\n                        needleColor=\"#7f2b32\"\n                        maxSegmentLabels={0}\n                        height={240}\n                        width={240}\n                        needleTransitionDuration={2000}\n                        needleTransition=\"easeElastic\"\n                    />\n                    <span className=\"label\">Balanza</span>\n                    <img\n                        className={`arrow ${active ? 'active' : ''}`}\n                        alt=\"icon-arrow-down\"\n                        src={`${urlPrefix}/arrow-down.png`}\n                    />\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"axis\"></div>\n                <div className=\"load-cell\">\n                    <img\n                        className={`arrow ${active ? 'active' : ''}`}\n                        alt=\"icon-arrow-down\"\n                        src={`${urlPrefix}/arrow-down.png`}\n                    />\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={dataset}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis name=\"torque\" tickCount={datasetLength} dataKey=\"torque\" />\n                            <XAxis dataKey=\"time\" hide />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                type=\"linear\"\n                                dataKey=\"torque\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={1}\n                                dot={{ strokeWidth: 1 }}\n                                name=\"Torque [Kg]\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <span className=\"label\">Celda de carga</span>\n                </div>\n            </div>\n            <div className=\"right\">\n                <img\n                    className={`motor ${active ? 'active' : ''}`}\n                    alt=\"break-icon\"\n                    src={`${urlPrefix}/break-small.png`}\n                />\n                <span className=\"label\">Freno</span>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationMethods;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Conclusions.scss';\nconst Conclusions: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Conclusiones');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"conclusions\">\n                <ul className=\"list\">\n                    <li className=\"item\">Mejora en la adquisición y procesamientos de datos.</li>\n                    <li className=\"item\">Memorias de ensayos</li>\n                    <li className=\"item\">\n                        Mejorar las estadísticas sobre el motor para analizar los comportamientos\n                        temporales.\n                    </li>\n                    <li className=\"item\">Gráfica de variables.</li>\n                    <li className=\"item\">\n                        Se logro desarrollar una aplicación abierta a futuras modificaciones.\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Conclusions;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Console.scss';\n\nconst CentralIcon = posed.div({\n    exit: { opacity: 0, scale: 0 },\n    enter: { opacity: 1, scale: 1, staggerChildren: 80, delayChildren: 500 },\n});\nconst Item = posed.div({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n});\nconst Lines = posed.span({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n});\nconst Console: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Consola');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <CentralIcon className=\"console\">\n                <Lines key=\"line1\" className=\"lines\" />\n                <Item key=\"battery\" className=\"items\">\n                    <img alt='battery-icon' src={`${urlPrefix}/battery.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line2\" className=\"lines\" />\n                <Item key=\"fan\" className=\"items\">\n                    <img alt='fan-icon' src={`${urlPrefix}/fan.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line3\" className=\"lines\" />\n                <Item key=\"fuel\" className=\"items\">\n                    <img alt='fuel-icon' src={`${urlPrefix}/fuel.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line4\" className=\"lines\" />\n                <Item key=\"ignition\" className=\"items\">\n                    <img alt='ignition-icon' src={`${urlPrefix}/ignition.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line5\" className=\"lines\" />\n                <Item key=\"speed\" className=\"items\">\n                    <img alt='speed-icon' src={`${urlPrefix}/speed.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line6\" className=\"lines\" />\n                <Item key=\"temperature\" className=\"items\">\n                    <img alt='temperature-icon' src={`${urlPrefix}/temperature.png`} className=\"icon\" />\n                </Item>\n                <Lines key=\"line7\" className=\"lines\" />\n                <div className=\"main\">\n                    <img alt='cpu-icon' key=\"cpu\" className=\"icon\" src={`${urlPrefix}/cpu.png`} />\n                </div>\n            </CentralIcon>\n        </div>\n    );\n};\n\nexport default Console;\n","import React, { useEffect, useState, useContext, useRef } from 'react';\nimport posed from 'react-pose';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport { SocketContext } from '../../context/Socket';\nimport './CurrentSituation.scss';\n\nconst AnimatedList = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 120,\n        delayChildren: 400,\n        transition: {\n            default: { duration: 100 },\n        },\n    },\n});\nconst Overlay = posed.div({\n    exit: {\n        opacity: 0,\n        zIndex: 0,\n    },\n    enter: {\n        opacity: 1,\n        zIndex: 2,\n        transition: {\n            default: { duration: 150 },\n        },\n    },\n});\nconst AnimatedImg = posed.div({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n    selected: {\n        zIndex: 3,\n        scale: 1.3,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n    unselected: {\n        zIndex: 1,\n        scale: 1,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n});\ntype ImageData = { name: string; alt: string };\nconst sources: Array<ImageData> = [\n    { name: 'console', alt: 'Consola' },\n    { name: 'break', alt: 'Freno' },\n    { name: 'sensor', alt: 'Encoder' },\n    { name: 'console-2', alt: 'Detalle consola' },\n    { name: 'engine', alt: 'Motor y freno' },\n];\nconst CurrentSituation: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [index, setIndex] = useState(sources.length - 1);\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    const interval = useRef(null);\n\n    const iterate = () => {\n        setIndex((index: number) => (index >= sources.length - 1 ? 0 : index + 1));\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle(' ');\n\n        interval.current = setInterval(iterate, 10000);\n        return () => clearInterval(interval.current);\n    }, [updateTitle]);\n\n    useEffect(() => {\n        // next image\n        socket.on('iterate', () => {\n            clearInterval(interval.current);\n            iterate();\n            // stop animation\n            // interval.current = setInterval(iterate, 10000);\n        });\n    }, [socket]);\n\n    return (\n        <div className=\"container\">\n            <Overlay className=\"overlay\" key=\"overlay\" />\n            <AnimatedList key=\"list\" className=\"slide currentSituation\">\n                {sources.map(({ name, alt }, i: number) => {\n                    const src = `${urlPrefix}/${name}.jpg`;\n                    return (\n                        <AnimatedImg\n                            className=\"picture\"\n                            pose={index === i ? 'selected' : 'unselected'}\n                            key={src}>\n                            <img src={src} alt={alt} />\n                            {index === i && <p>{alt}</p>}\n                        </AnimatedImg>\n                    );\n                })}\n            </AnimatedList>\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Enhancements.scss';\nconst Enhancements: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Mejoras futuras');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"enhancements\">\n                <ul className=\"list\">\n                    <li className=\"item\">Implementación del control del freno</li>\n                    <li className=\"item\">\n                        Extender adquisición de datos para los diferentes sensores presentes en la\n                        consola.{' '}\n                    </li>\n                    <li className=\"item\">\n                        Anexar estudios de consumo de los elementos presentes en sala.\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Enhancements;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Inputs.scss';\n\nconst AnimatedDiagram = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 400,\n    },\n});\nconst Line = posed.div({\n    exit: { opacity: 0, width: '0' },\n    enter: { opacity: 0.6, width: '80%', transition: { delay: 100, duration: 900 } },\n});\nconst AnimatedBlock = posed.div({\n    exit: { opacity: 0, rotateY: '-90deg' },\n    enter: { opacity: 1, rotateY: '0deg' },\n});\nconst Inputs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Procesamiento de entradas');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide inputs\">\n            <Line key=\"line\" className=\"connector\" />\n            <AnimatedDiagram key=\"speed\" className=\"diagram\">\n                <Line key=\"speed-line\" className=\"connector\" />\n                <AnimatedBlock key=\"speed-block1\" className=\"block\">\n                    <p className=\"title\">Celda de carga</p>\n                    <div className=\"connections\">\n                        <span>\n                            Torque\n                            <br />\n                            [Kg]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/load-cell.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block3\" className=\"result\">\n                    <p className=\"title\">Entrada analógica</p>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n            <AnimatedDiagram key=\"torque\" className=\"diagram\">\n                <Line key=\"torque-line\" className=\"connector\" />\n                <AnimatedBlock key=\"torque-block1\" className=\"block\">\n                    <p className=\"title\">Encoder</p>\n                    <div className=\"connections\">\n                        <span>\n                            Velocidad\n                            <br />\n                            [PPV]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/encoder.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block3\" className=\"result\">\n                    <p className=\"title\">Entrada digital</p>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n        </div>\n    );\n};\n\n//<img src={`${urlPrefix}/inputs.png`} />\nexport default Inputs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Linealization.scss';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nconst data = [\n    {\n        kg: 5,\n        v: 0.768,\n    },\n    {\n        kg: 10,\n        v: 0.979,\n    },\n    {\n        kg: 15,\n        v: 1.218,\n    },\n    {\n        kg: 25,\n        v: 1.663,\n    },\n    {\n        kg: 35,\n        v: 2.08,\n    },\n    {\n        kg: 45,\n        v: 2.53,\n    },\n];\n\nconst Linealization: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Linealización');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide linealization\">\n            <ResponsiveContainer height={'80%'}>\n                <LineChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis name='Kg.' tickCount={12} type=\"number\" domain={[0, 'dataMax + 5']} dataKey=\"kg\" />\n                    <YAxis name='Volts'/>\n                    <Legend />\n                    <Tooltip />\n                    <Line\n                        type=\"linear\"\n                        dataKey=\"v\"\n                        stroke=\"#7f2b32\"\n                        strokeWidth={2}\n                        dot={{ strokeWidth: 6 }}\n                        name=\"Volts vs Kg\"\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default Linealization;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './MainBlocks.scss';\n\nconst AnimatedList = posed.ul({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 500,\n    },\n});\nconst AnimatedItem = posed.li({\n    exit: { opacity: 0, rotateX: '-90deg' },\n    enter: { opacity: 1, rotateX: '0deg' },\n});\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Partes principales');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <AnimatedList className=\"main-blocks\">\n                <AnimatedItem key=\"engine\" className=\"block first\">\n                    <img alt='motor-icon' className=\"icon\" src={`${urlPrefix}/engine.png`} />\n                    <span className=\"name\">Motor</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"panel\" className=\"block\">\n                    <img className=\"icon\" alt='consola-icon' src={`${urlPrefix}/panel.png`} />\n                    <span className=\"name\">Consola</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"break\" className=\"block\">\n                    <img className=\"icon\" alt='break-icon' src={`${urlPrefix}/break-small.png`} />\n                    <span className=\"name\">Freno</span>\n                </AnimatedItem>\n            </AnimatedList>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Objectives.scss';\nconst Objectives: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Propuesta de desarrollo');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"objectives\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        Corrección de los métodos empleados para la adquisición de datos, selección\n                        de sensores, desarrollo de Hardware.\n                    </li>\n                    <li className=\"item\">Memoria de ensayos</li>\n                    <li className=\"item\">Interaccion del usuario con el sistema desarrollado.</li>\n                    <li className=\"item\">\n                        Multiplataforma, con un enfoque Open Source la cual permita modificaciones\n                        futuras.\n                    </li>\n                    <li className=\"item\">\n                        Desarrollo e implementación de controlador para freno eléctrico. Interfaz de\n                        usuario.\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Objectives;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Outputs.scss';\nconst AnimatedDiagram = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 400,\n    },\n});\nconst Line = posed.div({\n    exit: { opacity: 0, width: '0' },\n    enter: { opacity: 0.6, width: '80%', transition: { delay: 100, duration: 900 } },\n});\nconst AnimatedBlock = posed.div({\n    exit: { opacity: 0, rotateY: '-90deg' },\n    enter: { opacity: 1, rotateY: '0deg' },\n});\n\nconst Outputs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Procesamiento de salidas');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide outputs\">\n            <Line key=\"line\" className=\"connector\" />\n            <AnimatedDiagram key=\"speed\" className=\"diagram\">\n                <Line key=\"speed-line\" className=\"connector\" />\n                <AnimatedBlock key=\"speed-block1\" className=\"result\">\n                    <p className=\"title\">Salida digital</p>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block3\" className=\"block\">\n                    <p className=\"title\">Actuador de la ventilación</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/pistas.jpg`} />\n                        <span>\n                            Ventilación\n                            <br />\n                            [On/Off]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n            <AnimatedDiagram key=\"torque\" className=\"diagram\">\n                <Line key=\"torque-line\" className=\"connector\" />\n                <AnimatedBlock key=\"torque-block1\" className=\"result\">\n                    <p className=\"title\">Salida PWM sincronizada</p>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n\n                <AnimatedBlock key=\"torque-block3\" className=\"block\">\n                    <p className=\"title\">Actuador del freno</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/pistas.jpg`} />\n                        <span>\n                            Torque\n                            <br />\n                            [Kg]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n        </div>\n    );\n};\n\nexport default Outputs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Requirements.scss';\nconst Requirements: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Requerimientos');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"requirements\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        Medición de torque desarrollado por el motor, para lo mismo disponen que el\n                        peso máximo a medir es de 35 Kg.\n                    </li>\n                    <li className=\"item\">\n                        Medición de velocidad desarrollada por el motor, solicitud 12000 rpm valor\n                        máximo.\n                    </li>\n                    <li className=\"item\">Comando de elementos presentes en la sala.</li>\n                    <li className=\"item\">Gráfica de variables.</li>\n                    <li className=\"item\">Memoria de datos de ensayo.</li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Requirements;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Controller.scss';\n\nconst Controller = posed.div({\n    exit: { opacity: 0, rotateY: '-90deg',  transition: { duration: 200, delay: 400 } },\n    enter: { opacity: 1, rotateY: '0deg' ,transition: { duration: 200, delay: 400 } },\n});\n\nconst Schematic: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Selección del controlador');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide controllers\">\n            <Controller key='section-arduino' className=\"section\">\n                <img src={`${urlPrefix}/arduino.jpg`} />\n                <div className=\"info\">\n                    <p className=\"title\">Arduino UNO</p>\n                    <ul className=\"list\">\n                        <li className=\"item good\">Costo</li>\n                        <li className=\"item good\">Complejidad</li>\n                        <li className=\"item good\">Compatibilidad</li>\n                        <li className=\"item bad\">Recursos</li>\n                    </ul>\n                </div>\n            </Controller>\n            <Controller key='section-freescale' className=\"section\">\n                <div className=\"info\">\n                    <p className=\"title\">Freescale KL46Z</p>\n                    <ul className=\"list\">\n                        <li className=\"item good\">Recursos</li>\n                        <li className=\"item good\">Compatibilidad</li>\n                        <li className=\"item normal\">Costo</li>\n                        <li className=\"item bad\">Complejidad</li>\n                    </ul>\n                </div>\n                <img src={`${urlPrefix}/freedom.jpg`} />\n            </Controller>\n        </div>\n    );\n};\n\nexport default Schematic;\n","import React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport './AnimatedList.scss';\n\ninterface Props {\n    items: Array<any>;\n}\n\nconst AnimatedItem = posed.ul({\n    exit: { opacity: 0, height: 0 },\n    enter: {\n        opacity: 1,\n        height: 'auto',\n    },\n    unselected: {\n        position: 'static',\n        width: '100%',\n        height: 'auto',\n        flip: true,\n    },\n    selected: {\n        position: 'fixed',\n        width: '100%',\n        left: 0,\n        bottom: 0,\n        flip: true,\n    },\n});\n\nconst AnimatedList: React.FC<Props> = ({ items }) => {\n    return (\n        <div className=\"list\">\n            <PoseGroup>\n                {items.map((item: any, index: number) => {\n                    return (\n                        <AnimatedItem pose={'enter'} key={`item${index}`}>\n                            <div className={`content `}>{item.name}</div>\n                        </AnimatedItem>\n                    );\n                })}\n            </PoseGroup>\n        </div>\n    );\n};\n\nexport default AnimatedList;\n","const Icons = {\n    cpu:\n        'M15 9H9v6h6V9zm-2 4h-2v-2h2v2zm8-2V9h-2V7c0-1.1-.9-2-2-2h-2V3h-2v2h-2V3H9v2H7c-1.1 0-2 .9-2 2v2H3v2h2v2H3v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2zm-4 6H7V7h10v10z',\n    computer:\n        'M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z',\n    discrete: 'M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z',\n    equalizer: 'M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z',\n    hub:\n        'M17 16l-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z',\n    lightSignal:\n        'M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z',\n    message:\n        'M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z',\n    message2:\n        'M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z',\n    plot: 'M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z',\n    weight:\n        'M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z',\n    resistor:\n        'M24.272 22.416c-0.415 0-0.794-0.247-0.959-0.633l-3.509-8.186l-2.818 8.118 c-0.145 0.416-0.536 0.697-0.978 0.701c-0.002 0-0.005 0-0.008 0c-0.438 0-0.83-0.272-0.98-0.685l-2.922-7.957l-2.838 7.95 c-0.146 0.407-0.528 0.683-0.962 0.691c-0.435 0.009-0.827-0.251-0.989-0.654l-2.191-5.439h-5.219v-2.087h5.924 c0.426 0 0.809 0.258 0.968 0.653l1.428 3.545l2.883-8.076c0.148-0.414 0.539-0.69 0.979-0.693c0.001 0 0.002 0 0.004 0 c0.437 0 0.829 0.273 0.98 0.685l2.906 7.92l2.743-7.903c0.142-0.408 0.521-0.686 0.949-0.701c0.433-0.015 0.827 0.236 0.997 0.632 l3.457 8.066l1.062-3.396c0.136-0.436 0.54-0.733 0.996-0.733h5.925v2.087h-5.156l-1.678 5.361 c-0.13 0.418-0.506 0.709-0.942 0.731C24.308 22.416 24.29 22.416 24.272 22.416z',\n    sensor:\n        'M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z',\n    sensor2:\n        'M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16zM18 6h-5c-1.1 0-2 .9-2 2v2.28c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V8h3v8H8V8h2V6H6v12h12V6z',\n    share:\n        'M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z',\n    signal: 'M7 18h2V6H7v12zm4 4h2V2h-2v20zm-8-8h2v-4H3v4zm12 4h2V6h-2v12zm4-8v4h2v-4h-2z',\n    signal2:\n        'M30.857 16H24c-0.524 0-0.98 0.356-1.108 0.865l-1.905 7.619L18.277 1.011c-0.072-0.627-0.641-1.076-1.268-1.003 c-0.49 0.057-0.888 0.422-0.987 0.906l-3.622 18.114l-2.155-7.9c-0.165-0.609-0.793-0.969-1.402-0.804 c-0.347 0.094-0.629 0.346-0.763 0.679L6.083 16h-4.94C0.512 16 0 16.512 0 17.143s0.512 1.143 1.143 1.143h5.714 c0.468 0 0.889-0.284 1.062-0.719l1.018-2.547l2.532 9.282c0.135 0.497 0.587 0.842 1.103 0.842h0.039 c0.528-0.018 0.976-0.396 1.081-0.914l3.147-15.743l2.598 22.502c0.063 0.549 0.509 0.974 1.061 1.011L20.571 32 c0.524-0.001 0.98-0.357 1.107-0.867l3.214-12.848h5.965c0.631 0 1.143-0.512 1.143-1.143S31.488 16 30.857 16z',\n    voiceSensor:\n        'M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z',\n    voiceSignal:\n        'M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z',\n    line:\n        'M420.001 21.625c-140.015 0-280.004 0-420.001 0c0-1.545 0-3.091 0-4.643 c139.994 0 279.996 0 420.001 0C420.001 18.526 420.001 20.076 420.001 21.625z',\n    thanks:\n        'M31.663 5.669c-0.267 0.866-0.51 1.742-0.805 2.599 c-1.808 5.259-3.603 10.523-5.453 15.768c-1.555 4.401-3.186 8.774-4.764 13.168c-0.161 0.454-0.367 0.63-0.866 0.603 c-0.863-0.049-1.733-0.03-2.601-0.005c-0.342 0.01-0.49-0.103-0.599-0.428c-1-2.996-2.021-5.985-3.033-8.977 c-1.362-4.036-2.776-8.054-4.063-12.112C8.42 12.947 7.515 9.56 6.541 6.196c-0.038-0.134-0.073-0.268-0.087-0.32 c-0.583 10.629-1.17 21.331-1.76 32.109c-0.825 0-1.589 0-2.352 0c-0.755 0.002-1.51 0-2.343 0.002 C0.862 25.565 1.723 13.189 2.585 0.783c2.043 0 4.086-0.001 6.215-0.001c3.39 10.109 7.442 20.04 10.179 30.451 c0.125-0.458 0.252-0.919 0.377-1.378c1.224-4.492 2.73-8.893 4.333-13.261c1.884-5.133 3.78-10.264 5.659-15.398 c0.119-0.324 0.262-0.464 0.632-0.46c1.749 0.023 3.5 0.01 5.25 0.009c0.14 0 0.279 0 0.469 0 c0.777 12.416 1.551 24.797 2.329 37.234c-1.445 0.001-2.813 0.001-4.182 0.001c-0.169 0-0.339 0-0.575 0 c-0.519-10.794-1.443-21.521-1.491-32.289C31.74 5.684 31.702 5.676 31.663 5.669z M117.931 20.528 c5.988 0 11.928-0.001 17.93-0.002c0.002 5.815 0.003 11.606 0.004 17.396c1.662 0 3.263-0.001 4.863-0.001 c-0.002-12.416-0.006-24.798-0.008-37.168c-1.643 0.001-3.241 0.001-4.885 0.002c0.002 5.166 0.003 10.299 0.005 15.455 c-5.994 0.002-11.944 0.004-17.944 0.005c-0.001-5.175-0.002-10.32-0.004-15.463c-1.636 0-3.223 0-4.815 0 c0.002 12.408 0.005 24.79 0.008 37.181c1.625-0.001 3.211 0 4.851-0.001C117.933 32.112 117.932 26.319 117.931 20.528z  M257.408 37.896c1.616-0.001 3.214-0.001 4.859-0.001c-0.001-5.373-0.002-10.711-0.003-16.057c0.104-0.02 0.164-0.039 0.224-0.04 c1.515-0.002 3.028-0.044 4.541 0.01c1.263 0.045 2.5 0.287 3.612 0.949c1.554 0.924 2.428 2.377 2.912 4.038 c0.586 2.005 1.004 4.058 1.54 6.076c0.409 1.533 0.889 3.047 1.338 4.568c0.105 0.355 0.312 0.511 0.723 0.498 c1.214-0.034 2.428-0.013 3.642-0.013c0.277 0 0.555 0 0.76 0c-0.495-1.7-1.006-3.349-1.453-5.013 c-0.652-2.431-1.201-4.888-1.902-7.303c-0.498-1.717-1.413-3.236-2.853-4.353c-0.596-0.463-1.292-0.8-1.948-1.195 c-0.004 0.009 0.002-0.033 0.021-0.042c0.159-0.069 0.318-0.133 0.479-0.198c2.103-0.84 3.842-2.134 5.045-4.083 c1.147-1.859 1.551-3.899 1.384-6.059c-0.208-2.676-1.223-4.944-3.379-6.638c-1.982-1.556-4.302-2.161-6.737-2.44 c-2.195-0.251-4.397-0.26-6.598-0.091c-2.064 0.159-4.127 0.364-6.213 0.551C257.404 13.442 257.406 25.659 257.408 37.896z  M262.261 17.553c-0.001-4.144 0.004-8.289-0.013-12.433c-0.001-0.43 0.12-0.6 0.554-0.663c2.666-0.392 5.323-0.535 7.95 0.218 c2.715 0.778 4.396 2.718 4.7 5.358c0.434 3.75-1.556 6.698-5.251 7.667c-0.948 0.247-1.95 0.346-2.934 0.388 c-1.479 0.064-2.961 0.018-4.443 0.018c-0.17 0-0.34 0-0.564 0C262.261 17.89 262.261 17.722 262.261 17.553z M245.371 22.834 c0.001 3.122 0.002 6.244 0.002 9.365c0.001 1.216 0.007 1.241-1.21 1.531c-2.946 0.704-5.924 0.812-8.887 0.172 c-4.483-0.966-7.729-3.518-9.406-7.829c-1.627-4.184-1.686-8.464-0.248-12.71c1.163-3.439 3.437-5.961 6.756-7.487 c3.622-1.667 7.421-1.795 11.269-1.134c1.411 0.243 2.779 0.736 4.229 1.132c0.358-1.211 0.743-2.513 1.126-3.814 c-0.124-0.069-0.204-0.122-0.291-0.157c-0.29-0.118-0.578-0.245-0.877-0.341c-4.202-1.354-8.485-1.586-12.816-0.814 c-4.378 0.782-8.164 2.697-11.085 6.124c-3.009 3.53-4.272 7.711-4.384 12.275c-0.068 2.773 0.341 5.485 1.299 8.104 c1.971 5.391 5.797 8.748 11.284 10.266c2.979 0.825 6.022 0.936 9.083 0.692c2.848-0.225 5.619-0.844 8.335-1.729 c0.413-0.136 0.57-0.316 0.569-0.782c-0.021-5.582-0.017-11.163-0.017-16.745c0-0.185 0-0.369 0-0.576 c-4.119 0.002-8.196 0.002-12.264 0.004c0.001 1.313 0 2.597 0.002 3.897c2.511-0.001 4.985-0.002 7.531-0.002 C245.371 22.495 245.372 22.665 245.371 22.834z M45.287 1.39c0.001 7.396-0.01 14.792 0.013 22.188 c0.007 2.404 0.359 4.768 1.19 7.035c1.405 3.832 3.996 6.426 7.999 7.466c2.602 0.676 5.231 0.684 7.859 0.142 c3.434-0.709 6.164-2.458 8.017-5.481c1.721-2.807 2.366-5.929 2.394-9.152c0.063-7.443 0.017-14.888 0.015-22.331 c0-0.165 0.001-0.332 0-0.494c-1.654 0-3.24 0.001-4.872 0c0 0.228 0 0.43 0.001 0.632c0.001 7.128 0.033 14.256-0.02 21.385 c-0.011 1.592-0.219 3.202-0.519 4.77c-0.394 2.049-1.277 3.915-2.96 5.236c-2.673 2.102-5.688 2.357-8.791 1.215 c-2.563-0.945-3.9-3.061-4.686-5.567c-0.573-1.833-0.754-3.728-0.759-5.635c-0.013-7.16-0.008-14.32-0.009-21.479 c-0.001-0.182 0-0.365 0-0.557c-1.648 0.001-3.235 0-4.874 0.001C45.287 0.986 45.287 1.188 45.287 1.39z M393.769 37.487 c-0.982-2.869-1.969-5.738-2.949-8.607c-1.804-5.279-3.604-10.559-5.405-15.836c-1.365-4.002-2.733-8.001-4.093-12.003 c-0.086-0.254-0.183-0.381-0.485-0.379c-1.718 0.017-3.438 0.014-5.155 0.004c-0.243-0.001-0.355 0.07-0.435 0.31 c-0.316 0.971-0.662 1.932-0.992 2.898c-1.926 5.667-3.854 11.335-5.776 17.006c-1.836 5.417-3.668 10.835-5.501 16.254 c-0.082 0.242-0.171 0.481-0.273 0.774c1.552-0.001 3.017-0.019 4.481 0.01c0.417 0.008 0.596-0.113 0.727-0.515 c1.158-3.59 2.344-7.171 3.512-10.756c0.104-0.315 0.222-0.485 0.608-0.484c4.1 0.016 8.198 0.011 12.298 0.003 c0.291-0.001 0.448 0.064 0.543 0.372c0.284 0.916 0.611 1.817 0.917 2.726c0.92 2.725 1.843 5.447 2.751 8.176 c0.117 0.354 0.285 0.484 0.67 0.473c1.071-0.031 2.145-0.011 3.217-0.011c0.468 0 0.936 0 1.471 0 C393.834 37.697 393.805 37.589 393.769 37.487z M372.633 22.362c1.848-5.779 4.079-11.401 5.498-17.301 c1.44 5.886 3.711 11.487 5.563 17.298C379.992 22.36 376.343 22.362 372.633 22.362z M177.275 37.515 c-0.793-2.321-1.588-4.64-2.38-6.96c-2.248-6.587-4.493-13.175-6.742-19.761c-1.101-3.227-2.214-6.452-3.306-9.682 c-0.102-0.303-0.228-0.409-0.555-0.406c-1.655 0.021-3.312 0.02-4.967 0.003c-0.335-0.004-0.487 0.088-0.599 0.42 c-0.621 1.878-1.277 3.748-1.913 5.621c-2.218 6.532-4.432 13.064-6.649 19.596c-1.06 3.126-2.127 6.249-3.188 9.374 c-0.244 0.722-0.478 1.447-0.736 2.233c0.236 0 0.392 0 0.546 0c1.324 0 2.648-0.02 3.974 0.01c0.394 0.01 0.544-0.134 0.657-0.484 c1.178-3.615 2.374-7.226 3.552-10.841c0.097-0.297 0.213-0.429 0.551-0.428c4.114 0.011 8.229 0.009 12.345-0.001 c0.302-0.002 0.438 0.096 0.535 0.386c0.567 1.715 1.156 3.424 1.737 5.135c0.661 1.949 1.317 3.899 1.992 5.845 c0.05 0.144 0.216 0.354 0.331 0.356c1.621 0.022 3.243 0.015 4.94 0.015C177.344 37.749 177.314 37.631 177.275 37.515z  M156.155 22.403c1.855-5.791 4.084-11.42 5.498-17.319c1.438 5.907 3.716 11.523 5.56 17.318 C163.52 22.402 159.856 22.403 156.155 22.403z M289.064 37.934c0.404 0.007 0.563-0.13 0.685-0.506 c1.16-3.589 2.343-7.17 3.518-10.753c0.089-0.272 0.148-0.498 0.55-0.496c4.131 0.016 8.261 0.011 12.392 0.002 c0.285 0 0.415 0.092 0.502 0.364c0.259 0.825 0.551 1.639 0.828 2.457c0.945 2.8 1.896 5.599 2.83 8.4 c0.124 0.373 0.289 0.54 0.723 0.528c1.371-0.035 2.743-0.012 4.115-0.015c0.163 0 0.326-0.018 0.534-0.029 c-0.394-1.151-0.763-2.235-1.133-3.318c-2.461-7.197-4.92-14.395-7.38-21.592c-1.355-3.969-2.715-7.937-4.059-11.91 c-0.106-0.317-0.265-0.391-0.577-0.387c-1.654 0.015-3.31 0.02-4.965-0.002c-0.355-0.005-0.479 0.127-0.585 0.438 c-1.413 4.183-2.841 8.362-4.261 12.542c-2.069 6.101-4.136 12.203-6.206 18.304c-0.665 1.961-1.335 3.921-2.029 5.963 C286.104 37.924 287.585 37.908 289.064 37.934z M299.971 5.08c1.445 5.894 3.725 11.504 5.563 17.296 c-3.696 0-7.346 0.002-11.06 0.002C296.324 16.587 298.559 10.976 299.971 5.08z M181.751 36.597 c4.457 2.022 9.065 2.483 13.809 1.245c2.241-0.585 4.201-1.703 5.684-3.521c2.255-2.769 2.729-5.948 1.948-9.342 c-0.611-2.657-2.352-4.491-4.585-5.925c-1.73-1.112-3.634-1.857-5.529-2.621c-1.564-0.631-3.088-1.34-4.412-2.41 c-1.852-1.497-2.539-3.937-1.69-6.166c0.721-1.895 2.203-2.948 4.099-3.433c2.389-0.611 4.753-0.319 7.072 0.396 c0.864 0.268 1.689 0.658 2.576 1.008c0.437-1.291 0.877-2.592 1.321-3.908c-0.264-0.134-0.481-0.262-0.712-0.359 c-3.919-1.646-7.957-1.967-12.045-0.828c-3.186 0.889-5.692 2.75-6.889 5.936c-1.238 3.298-0.924 6.474 1.338 9.299 c1.432 1.79 3.355 2.933 5.413 3.853c1.679 0.749 3.42 1.365 5.063 2.183c0.983 0.491 1.903 1.175 2.716 1.921 c1.099 1.007 1.563 2.355 1.625 3.854c0.079 1.975-0.515 3.661-2.046 4.95c-1.476 1.243-3.254 1.68-5.124 1.752 c-2.791 0.108-5.433-0.527-7.939-1.743c-0.417-0.201-0.822-0.429-1.271-0.665c-0.418 1.385-0.82 2.72-1.228 4.07 C181.232 36.307 181.481 36.475 181.751 36.597z M398.126 36.491c1.08 0.422 2.145 0.918 3.261 1.217 c3.507 0.943 7.051 1.082 10.581 0.113c2.629-0.72 4.85-2.074 6.387-4.39c1.367-2.066 1.794-4.355 1.603-6.798 c-0.208-2.634-1.327-4.785-3.332-6.485c-1.766-1.497-3.824-2.463-5.952-3.307c-1.873-0.743-3.744-1.485-5.364-2.73 c-2.316-1.782-2.91-4.949-1.336-7.321c0.973-1.468 2.417-2.22 4.102-2.527c2.696-0.492 5.29-0.051 7.806 0.966 c0.432 0.174 0.845 0.392 1.302 0.605c0.457-1.349 0.899-2.649 1.329-3.916c-0.052-0.065-0.059-0.082-0.071-0.088 c-0.069-0.038-0.137-0.078-0.209-0.11c-4.345-1.953-8.808-2.299-13.318-0.743c-4.204 1.448-7.003 5.17-6.686 9.89 c0.167 2.471 1.197 4.501 3.011 6.147c1.802 1.635 3.949 2.669 6.2 3.513c1.64 0.613 3.239 1.295 4.712 2.259 c3.488 2.28 3.398 6.292 2.04 8.504c-1.084 1.767-2.772 2.603-4.728 2.959c-2.753 0.5-5.424 0.068-8.012-0.906 c-0.947-0.356-1.852-0.832-2.813-1.27c-0.4 1.322-0.804 2.654-1.213 4.014C397.667 36.228 397.882 36.395 398.126 36.491z  M106.966 1.691c-0.244-0.11-0.487-0.221-0.737-0.315c-2.155-0.82-4.403-1.115-6.694-1.222c-2.908-0.134-5.751 0.173-8.505 1.143 c-4.785 1.686-8.296 4.808-10.359 9.453c-2.136 4.809-2.367 9.816-1.09 14.868c1.633 6.454 5.751 10.565 12.189 12.24 c4.248 1.104 8.519 0.822 12.752-0.193c0.875-0.211 1.718-0.557 2.592-0.846c-0.359-1.367-0.688-2.625-1.02-3.884 c-0.109 0.028-0.172 0.038-0.227 0.061c-3.43 1.428-6.997 1.806-10.64 1.216c-4.831-0.783-8.339-3.375-10.096-8.008 c-1.656-4.363-1.62-8.821-0.108-13.216c1.344-3.91 4.021-6.626 7.963-7.93c4.379-1.45 8.71-1.105 12.994 0.647 c0.379-1.275 0.766-2.58 1.155-3.888C107.063 1.764 107.021 1.716 106.966 1.691z M333.734 34.015 c-4.838-1.023-8.087-3.927-9.609-8.628c-1.265-3.906-1.24-7.881-0.049-11.8c1.281-4.209 3.984-7.15 8.194-8.589 c3.242-1.109 6.549-1.115 9.859-0.366c1.062 0.24 2.086 0.639 3.143 0.97c0.375-1.271 0.761-2.574 1.158-3.921 c-0.599-0.222-1.148-0.455-1.718-0.631c-3.032-0.938-6.142-1.142-9.286-0.885c-2.921 0.239-5.691 1.015-8.238 2.49 c-4.185 2.421-6.873 6.019-8.196 10.636c-1.147 4-1.164 8.047-0.204 12.084c0.781 3.286 2.325 6.155 4.824 8.481 c2.423 2.252 5.301 3.566 8.513 4.202c3.077 0.61 6.163 0.509 9.248 0.052c1.605-0.238 3.18-0.598 4.676-1.255 c0.266-0.117 0.309-0.227 0.236-0.492c-0.315-1.153-0.607-2.31-0.912-3.479C341.579 34.402 337.704 34.855 333.734 34.015z  M352.385 37.875c1.607 0 3.175 0 4.749-0.001c-0.002-12.414-0.005-24.794-0.008-37.187c-1.596 0-3.154 0-4.749 0 C352.38 13.112 352.382 25.494 352.385 37.875z',\n};\n\nexport default Icons;\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d << read this\n","import React, { forwardRef } from 'react';\nimport posed from 'react-pose';\nimport { tween } from 'popmotion';\nimport { interpolate } from 'flubber';\nimport Icons from './Icons';\nimport './MorphingIcon.scss';\n\ntype Transition = ({ from, to }: { from: number; to: number }) => any;\n\nconst morphTransition: Transition = ({ from, to }) =>\n    tween({\n        from: 0,\n        to: 1,\n        duration: 400,\n    }).pipe(interpolate(from, to));\n\nconst Paths = Object.entries(Icons).reduce((paths, [name, path]) => {\n    const icon = {\n        d: path,\n        transition: morphTransition,\n    };\n    return { ...paths, [name]: icon };\n}, {});\n\nconst Icon = posed.path(Paths);\n\ninterface Props {\n    className?: string;\n    icon: string;\n    width?: number;\n    height?: number;\n    ref?: any;\n}\nconst MorphingIcon: React.FC<Props> = ({ className, icon, height, width }, ref) => {\n    return (\n        <svg\n            ref={ref}\n            className={`morphingIcon ${className}`}\n            width={width}\n            height={height}\n            viewBox=\"0 0 420 38\">\n            <Icon pose={icon} />\n        </svg>\n    );\n};\n\nexport default forwardRef(MorphingIcon);\n","import React, { useEffect, useState } from 'react';\nimport { MorphingIcon } from '../../components';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './Thanks.scss';\n\nconst CurrentSituation: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const [status, setStatus] = useState(false);\n    const iterate = () => {\n        setStatus((prev: boolean) => {\n            return !prev;\n        });\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('🙏');\n    }, [updateTitle]);\n    return (\n        <div className=\"title\">\n            <MorphingIcon width={420} height={38} icon={ status ? 'thanks' : 'line'} />\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Title.scss';\n\nconst Title: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Proyecto final de ingeniería');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <p className=\"main-title\">\n                Automatización de un banco de pruebas de un motor a combustión\n            </p>\n            <div className=\"author\">\n                <span>Alumnos</span>\n                <hr />\n                <div>\n                    <img className=\"avatar\" alt='avatar-icon' src={`${urlPrefix}/avatar.png`} />\n                    Cicetti, Joaquín\n                </div>\n                <div>\n                    <img className=\"avatar\" alt='avatar-icon' src={`${urlPrefix}/avatar.png`} />\n                    Morelli, Nahuel\n                </div>\n                <span>Director</span>\n                <hr />\n                <div>\n                    <img className=\"avatar director\" alt='avatar-icon' src={`${urlPrefix}/avatar-director.png`} />\n                    Simón, José\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default Title;\n","import React, { useEffect, useContext, useState } from 'react';\nimport posed from 'react-pose';\nimport { MorphingIcon } from '../../components';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './Signals.scss';\nconst secuency = [\n    {\n        icon: 'weight',\n        title: 'Magnitud fisica',\n        body:\n            'Variable del mundo físico la cual se desea medir. Por ejemplo, la velocidad o el torque.',\n        examples: ['Velocidad de giro del eje', 'Torque ejercido', 'Temperatura ambiente'],\n    },\n    {\n        icon: 'resistor',\n        title: 'Sensor',\n        body: 'Dispositivo que transforma el flujo de energía en una señal electrica.',\n        examples: ['Encoder', 'Celda de carga', 'Termocupla'],\n    },\n    {\n        icon: 'equalizer',\n        title: 'Señal eléctrica',\n        body: 'Es una representación mesurable de la variable en cuestion',\n    },\n    {\n        icon: 'cpu',\n        title: 'Conversión',\n        body: 'Lectura, digitalización y procesamiento de la información',\n        examples: ['Conversión A/C', 'Muestreo', 'Filtrado'],\n    },\n    {\n        icon: 'message',\n        title: 'Difusión',\n        body: 'Intercambio de la información con los demas dispositivos',\n    },\n    {\n        icon: 'plot',\n        title: 'Visualización',\n        body: 'Etapa en la que la información procesada llega al usuario',\n        examples: ['Graficas', 'Paneles de control', 'Indicadores'],\n    },\n];\n\nconst Mobile = posed.div({\n    active: {\n        x: ({ x }) => `${x}%`,\n        transition: {\n            duration: 600,\n        },\n    },\n});\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const { socket } = useContext(SocketContext);\n    const [index, setIndex] = useState(0);\n    const content = secuency[index];\n    const { examples = [] } = content;\n    const x = (80 / secuency.length) * (index + 1);\n\n    const iterate = () => {\n        setIndex((index: number) => (index >= secuency.length - 1 ? 0 : index + 1));\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Procesamiento de una señal');\n    }, [updateTitle]);\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n\n    return (\n        <div className=\"slide signal\">\n            <span className=\"line left top\" />\n            <Mobile poseKey={x} pose={'active'} className=\"mobile\" x={x}>\n                <MorphingIcon width={128} height={128} icon={content.icon} />\n            </Mobile>\n            <span className=\"way\" />\n            <div className=\"description\">\n                <p className=\"title\">{content.title}</p>\n                <div className=\"body\">{content.body}</div>\n                {examples.length > 0 && (\n                    <ul className=\"examples\">\n                        {examples.map((example: string) => (\n                            <li className=\"item\">{example}</li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect } from 'react';\nimport ReactSpeedometer from 'react-d3-speedometer';\nimport { useTitle } from '../../hooks';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from 'recharts';\nimport './State.scss';\nconst data = [\n    { speed: 880, torque: 20 },\n    { speed: 1250, torque: 35 },\n    { speed: 1500, torque: 47 },\n    { speed: 1750, torque: 65 },\n    { speed: 2000, torque: 70 },\n    { speed: 2250, torque: 78 },\n    { speed: 2500, torque: 75 },\n    { speed: 2750, torque: 72 },\n    { speed: 3000, torque: 70 },\n    { speed: 3250, torque: 68 },\n    { speed: 3500, torque: 65 },\n    { speed: 3750, torque: 60 },\n    { speed: 4000, torque: 55 },\n    { speed: 4250, torque: 45 },\n    { speed: 4470, torque: 27 },\n];\n\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Situación actual');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide \">\n            <span className=\"line left top\" />\n            <div className=\"state\">\n                <ul className=\"list\">\n                    <div className=\"item\">\n                        <div className=\"icon\">\n                            <ReactSpeedometer\n                                value={12}\n                                currentValueText={`${12} Kg.`}\n                                maxValue={50}\n                                minValue={0}\n                                segments={3}\n                                ringWidth={20}\n                                startColor=\"#1d3f3b45\"\n                                endColor=\"#1d3f3bcc\"\n                                needleColor=\"#7f2b32\"\n                                maxSegmentLabels={0}\n                                width={220}\n                                height={160}\n                                needleTransitionDuration={2000}\n                                needleTransition=\"easeElastic\"\n                            />\n                        </div>\n                        <div className=\"content\">Balanza reloj. Alcance 25Kg. Resolusión 100g.</div>\n                    </div>\n                    <div className=\"item\">\n                        <div className=\"icon\">\n                            <img alt=\"speed-icon\" src={`${urlPrefix}/break.png`} className=\"icon\" />\n                        </div>\n                        <div className=\"content\">Potenciometro de control fino y grueso. Sin sincronización con la red eléctrica</div>\n                    </div>\n                    <div className=\"item\">\n                        <div className=\"icon\">\n                            <img alt=\"speed-icon\" src={`${urlPrefix}/speed.png`} className=\"icon\" />\n                        </div>\n                        <div className=\"content\">Sensor fotoeléctrico. Alcance: 10.000 rpm. </div>\n                    </div>\n                    <div className=\"item\">\n                        <div className=\"icon\">\n                            <LineChart width={320} height={180} data={data}>\n                                <XAxis />\n                                <YAxis />\n                                <Line\n                                    type=\"monotone\"\n                                    dataKey=\"torque\"\n                                    stroke=\"#7f2b32\"\n                                    strokeWidth={3}\n                                    dot={{ strokeWidth: 1 }}\n                                />\n                            </LineChart>\n                        </div>\n                        <div className=\"content\">Adquisición de datos manual</div>\n                    </div>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport { Player, ControlBar } from 'video-react';\nimport 'video-react/dist/video-react.css';\nimport './Video.scss';\ntype Player = {\n    video: {\n        toggleFullscreen: () => void;\n    };\n};\nconst Video: React.FC = () => {\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/videos' : '/thesis-presentation/videos';\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle(' ');\n    }, [updateTitle]);\n    return (\n        <div className=\"video\">\n            <Player autoPlay src={`${urlPrefix}/calibration.mp4`}>\n                <ControlBar disableCompletely />\n            </Player>\n        </div>\n    );\n};\n\nexport default Video;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './WhatIs.scss';\n\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Automatización de un banco de pruebas de un motor a combustión');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <div className=\"asks\">\n                <div className=\"ask\">\n                    <img className=\"icon\" alt=\"ask-icon\" src={`${urlPrefix}/ask-2.png`} />\n                    Qué es un banco de pruebas genérico\n                </div>\n                <div className=\"ask\">\n                    Para qué sirve\n                    <img className=\"icon\" alt=\"ask-icon\" src={`${urlPrefix}/ask-2.png`} />\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","export { default as Break } from './Break/Break';\nexport { default as CalibrationCell } from './CalibrationCell/CalibrationCell';\nexport { default as CalibrationEncoder } from './CalibrationEncoder/CalibrationEncoder';\nexport { default as CalibrationMethods } from './CalibrationMethods/CalibrationMethods';\nexport { default as Conclusions } from './Conclusions/Conclusions';\nexport { default as Console } from './Console/Console';\nexport { default as CurrentSituation } from './CurrentSituation/CurrentSituation';\nexport { default as Enhancements } from './Enhancements/Enhancements';\nexport { default as Inputs } from './Inputs/Inputs';\nexport { default as Linealization } from './Linealization/Linealization';\nexport { default as MainBlocks } from './MainBlocks/MainBlocks';\nexport { default as Objectives } from './Objectives/Objectives';\nexport { default as Outputs } from './Outputs/Outputs';\nexport { default as Requirements } from './Requirements/Requirements';\nexport { default as Controller } from './Controller/Controller';\nexport { default as Thanks } from './Thanks/Thanks';\nexport { default as Title } from './Title/Title';\nexport { default as Signals } from './Signals/Signals';\nexport { default as State } from './State/State';\nexport { default as Video } from './Video/Video';\nexport { default as WhatIs } from './WhatIs/WhatIs';\n// slides order\nexport const pageIndex = [\n    'title',\n    'what-is',\n    'main-blocks',\n    'current-situation',\n    'state',\n    'console',\n    'requirements',\n    'objectives',\n    //'signals',\n    'controller',\n    'inputs',\n    'outputs',\n    //'speed',\n    //'torque',\n    'calibration-methods',\n    'calibration-cell',\n    'calibration-encoder',\n    //'linealization',\n    'video',\n    'enhancements',\n    'conclusions',\n    'thanks',\n];\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { Route, Switch, Link, useHistory, useLocation } from 'react-router-dom';\nimport { SocketContext, Update, Shortcut } from './context/Socket';\nimport QRCode from 'react-qr-code';\nimport {\n    Break,\n    CalibrationCell,\n    CalibrationEncoder,\n    CalibrationMethods,\n    Conclusions,\n    Console,\n    CurrentSituation,\n    Enhancements,\n    Inputs,\n    Signals,\n    Linealization,\n    MainBlocks,\n    Objectives,\n    Outputs,\n    pageIndex,\n    Requirements,\n    State,\n    Controller,\n    Thanks,\n    Title,\n    Video,\n    WhatIs,\n} from './pages';\nimport { useTitle, useKeyDown } from './hooks';\nimport './App.scss';\n\ndeclare global {\n    interface Window {\n        serverIP: string;\n    }\n}\n\nconst App: React.FC = () => {\n    const leftArrow = useRef(null);\n    const rightArrow = useRef(null);\n    const { title, updateTitle } = useTitle();\n    const history = useHistory();\n    const location = useLocation();\n    const { socket } = useContext(SocketContext);\n    const [devices, setDevices] = useState(0);\n\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n\n    const clickRight = (): void => {\n        if (rightArrow && rightArrow.current && typeof rightArrow.current.click === 'function')\n            rightArrow.current.click();\n    };\n    const clickLeft = (): void => {\n        if (leftArrow && leftArrow.current && typeof leftArrow.current.click === 'function')\n            leftArrow.current.click();\n    };\n    useKeyDown({\n        ArrowLeft: clickLeft,\n    });\n    useKeyDown({\n        ArrowRight: clickRight,\n    });\n    // notify slide changes\n    useEffect(() => {\n        // get slide name\n        const slide = location.pathname.replace('/', '');\n        // get slide index\n        const index = pageIndex.indexOf(slide);\n        // update title on restart\n        if (index === -1) updateTitle('Proyecto final de ingeniería');\n        // new update message\n        const message: Update = {\n            index: index >= 0 ? index : 0,\n            slide,\n        };\n        socket.emit('update', message);\n    }, [location, updateTitle, socket]);\n\n    useEffect(() => {\n        // process commands\n        socket.on('command', ({ command }: { command: string }) => {\n            if (command === 'next') clickRight();\n            else clickLeft();\n        });\n        // shortcut to the slide\n        socket.on('shortcut', (shortcut: Shortcut) => {\n            const { index = 0 } = shortcut;\n            // notify a slide change\n            const route = `/${pageIndex[index]}`;\n            history.push(route);\n        });\n    }, [history, socket]);\n    useEffect(() => {\n        // broadcast to update the range max value\n        socket.on('new user', () => {\n            socket.emit('count', pageIndex.length);\n        });\n        // broadcast to update the range max value\n        socket.on('devices', devices => {\n            setDevices(devices);\n        });\n    }, [socket]);\n    return (\n        <div className=\"app\">\n            <Route\n                render={({ location }) => {\n                    const { pathname } = location;\n                    const index = pageIndex.indexOf(pathname.replace('/', ''));\n                    const nextSlide = pageIndex[index + 1] || '';\n                    const prevSlide = pageIndex[index - 1] || '';\n                    const serverIP = window.serverIP || 'localhost';\n                    return (\n                        <PoseGroup>\n                            <Header\n                                className=\"header\"\n                                key=\"header\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {title}\n                            </Header>\n                            <RouteContainer key={`routerContainer${location.key}`}>\n                                <Switch location={location} key={'switch'}>\n                                    <Route path={`/break`} component={Break} key=\"break\" />\n                                    <Route\n                                        path={`/calibration-cell`}\n                                        component={CalibrationCell}\n                                        key=\"calibration-cell\"\n                                    />\n                                    <Route\n                                        path={`/calibration-encoder`}\n                                        component={CalibrationEncoder}\n                                        key=\"calibration-encoder\"\n                                    />\n                                    <Route\n                                        path={`/calibration-methods`}\n                                        component={CalibrationMethods}\n                                        key=\"calibration-methods\"\n                                    />\n                                    <Route path={`/console`} component={Console} key=\"console\" />\n                                    <Route\n                                        path={`/conclusions`}\n                                        component={Conclusions}\n                                        key=\"conclusions\"\n                                    />\n                                    <Route\n                                        path={`/controller`}\n                                        component={Controller}\n                                        key=\"controller\"\n                                    />\n                                    <Route\n                                        path={`/current-situation`}\n                                        component={CurrentSituation}\n                                        key=\"current-situation\"\n                                    />\n\n                                    <Route\n                                        path={`/enhancements`}\n                                        component={Enhancements}\n                                        key=\"enhancements\"\n                                    />\n                                    <Route path={`/inputs`} component={Inputs} key=\"inputs\" />\n                                    <Route\n                                        path={`/linealization`}\n                                        component={Linealization}\n                                        key=\"linealization\"\n                                    />\n                                    <Route\n                                        path={`/main-blocks`}\n                                        component={MainBlocks}\n                                        key=\"main-blocks\"\n                                    />\n                                    <Route\n                                        path={`/objectives`}\n                                        component={Objectives}\n                                        key=\"objectives\"\n                                    />\n                                    <Route path={`/outputs`} component={Outputs} key=\"outputs\" />\n                                    <Route\n                                        path={`/requirements`}\n                                        component={Requirements}\n                                        key=\"requirements\"\n                                    />\n                                    <Route path={`/signals`} component={Signals} key=\"signals\" />\n                                    <Route path={`/state`} component={State} key=\"state\" />\n                                    <Route path={`/thanks`} component={Thanks} key=\"thanks\" />\n                                    <Route path={`/title`} component={Title} key=\"title\" />\n                                    <Route path={`/video`} component={Video} key=\"video\" />\n                                    <Route path={`/what-is`} component={WhatIs} key=\"what-is\" />\n                                </Switch>\n                            </RouteContainer>\n                            <Controls\n                                key=\"controls\"\n                                className=\"controls\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {index >= 0 && (\n                                    <Link ref={leftArrow} id=\"backButton\" to={`/${prevSlide}`}>\n                                        <img\n                                            alt=\"icon-arrow-right\"\n                                            className=\"left\"\n                                            src={`${urlPrefix}/arrow-right.png`}\n                                        />\n                                    </Link>\n                                )}\n                                {index >= 0 && <span className=\"index\">{index}</span>}\n                                {index < pageIndex.length && (\n                                    <Link\n                                        ref={rightArrow}\n                                        to={`/${nextSlide}`}\n                                        className=\"noDecoration\">\n                                        {index >= 0 ? (\n                                            <img\n                                                alt=\"icon-arrow-right\"\n                                                src={`${urlPrefix}/arrow-right.png`}\n                                            />\n                                        ) : (\n                                            <div className=\"connections\">\n                                                {' '}\n                                                <QRCode\n                                                    level=\"L\"\n                                                    fgColor=\"#377771\"\n                                                    size={150}\n                                                    bgColor=\"#ffffff00\"\n                                                    value={`http://${serverIP}:3002/control`}\n                                                />\n                                                <p className=\"qrdetail\">Conectar control</p>\n                                                <div className=\"devices\">\n                                                    {new Array(devices).fill(1).map((_, i) => (\n                                                        <img\n                                                            key={`device${i}`}\n                                                            alt=\"icon-smartphone\"\n                                                            src={`${urlPrefix}/smartphone.png`}\n                                                        />\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Link>\n                                )}\n                            </Controls>\n                        </PoseGroup>\n                    );\n                }}\n            />\n            <div className=\"bg\" />\n        </div>\n    );\n};\n\nexport default App;\n\nconst RouteContainer = posed.div({\n    enter: {\n        opacity: 1,\n        left: 0,\n        transition: {\n            default: { duration: 200 },\n            beforeChildren: true,\n        },\n    },\n    exit: { opacity: 0, left: '-20%' },\n});\n\nconst Header = posed.span({\n    collapsed: {\n        fontSize: '2em',\n        height: '10vh',\n        transition: { duration: 200 },\n    },\n    expanded: {\n        fontSize: '3em',\n        height: '50vh',\n        transition: { duration: 200 },\n    },\n});\nconst Controls = posed.div({\n    collapsed: {\n        height: '5vh',\n        transition: { duration: 200 },\n    },\n    expanded: {\n        height: '50vh',\n        transition: { duration: 200 },\n    },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { TitleProvider } from './context/Title';\nimport { SocketProvider } from './context/Socket';\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <SocketProvider>\n            <TitleProvider>\n                <App />\n            </TitleProvider>\n        </SocketProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}