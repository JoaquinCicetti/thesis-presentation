{"version":3,"sources":["context/Socket.tsx","hooks/useKeyDown.ts","context/Title.tsx","hooks/useTitle.ts","pages/Break/Break.tsx","pages/CalibrationCell/CalibrationCell.tsx","pages/CalibrationEncoder/CalibrationEncoder.tsx","pages/CalibrationMethods/CalibrationMethods.tsx","pages/Conclusions/Conclusions.tsx","pages/Console/Console.tsx","pages/CurrentSituation/CurrentSituation.tsx","pages/Enhancements/Enhancements.tsx","pages/Inputs/Inputs.tsx","pages/Linealization/Linealization.tsx","pages/MainBlocks/MainBlocks.tsx","pages/Objectives/Objectives.tsx","pages/Outputs/Outputs.tsx","pages/Requirements/Requirements.tsx","pages/Controller/Controller.tsx","components/AnimatedList/AnimatedList.tsx","components/MorphingIcon/Icons.ts","components/MorphingIcon/MorphingIcon.tsx","pages/Thanks/Thanks.tsx","pages/Title/Title.tsx","pages/Signals/Signals.tsx","pages/State/State.tsx","pages/Video/Video.tsx","pages/WhatIs/WhatIs.tsx","pages/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["voidContext","socket","Socket","suscribe","event","onmessage","console","warn","emit","message","SocketContext","React","createContext","useKeydown","keyMap","keyHandler","code","useEffect","document","addEventListener","removeEventListener","TitleContext","title","setTitle","newTitle","useTitle","useContext","updateTitle","Break","className","data","weight","output","CalibrationCell","useState","step","setStep","visibleData","slice","iterate","prev","length","useKeyDown","KeyI","Space","on","map","_","index","key","alt","src","height","strokeDasharray","dataKey","tickCount","type","domain","stroke","strokeWidth","dot","name","animationDuration","initial","CalibrationEncoder","active","setActive","dataset","setDataset","currentValue","setCurrentValue","Math","random","addData","noise","newValue","round","_prev","newData","time","Date","getTime","speed","newDataset","push","interval","setInterval","clearInterval","hide","CalibrationMethods","urlPrefix","torque","value","currentValueText","maxValue","minValue","segments","ringWidth","startColor","endColor","needleColor","maxSegmentLabels","width","needleTransitionDuration","needleTransition","Conclusions","CentralIcon","posed","div","exit","opacity","scale","enter","staggerChildren","delayChildren","Item","Lines","span","Console","AnimatedList","transition","default","duration","Overlay","zIndex","AnimatedImg","selected","ease","unselected","sources","CurrentSituation","setIndex","useRef","current","i","pose","Enhancements","AnimatedDiagram","Line","AnimatedBlock","rotateY","delay","Inputs","kg","v","Linealization","ul","AnimatedItem","li","rotateX","WhatIs","Objectives","Outputs","Requirements","Controller","Schematic","position","flip","left","bottom","Icons","cpu","computer","discrete","equalizer","hub","lightSignal","message2","plot","resistor","sensor","sensor2","share","signal","signal2","voiceSensor","voiceSignal","line","thanks","thanks2","morphTransition","from","to","tween","pipe","interpolate","Paths","Object","entries","reduce","paths","icon","d","Icon","path","forwardRef","ref","viewBox","status","setStatus","Title","secuency","body","examples","Mobile","x","Speed","content","poseKey","example","Video","autoPlay","disableCompletely","pageIndex","App","leftArrow","rightArrow","history","useHistory","location","useLocation","devices","setDevices","clickRight","click","clickLeft","ArrowLeft","ArrowRight","slide","pathname","replace","indexOf","command","shortcut","route","render","nextSlide","prevSlide","serverIP","window","Header","RouteContainer","component","MainBlocks","Signals","State","Thanks","Controls","id","level","fgColor","size","bgColor","Array","fill","beforeChildren","collapsed","fontSize","expanded","Boolean","hostname","match","ReactDOM","basename","process","children","io","context","onMessage","Provider","TitleHandler","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.726d2beb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport io, { Socket } from 'socket.io-client';\n\nexport interface Update {\n    slide: string;\n    index: number;\n}\nexport interface Shortcut {\n    index: number;\n}\nexport type Message = string | Shortcut | Update;\nexport type onMessage = (message) => void;\n\nexport interface SocketContext {\n    socket: Socket;\n    suscribe: (event: string, onmessage: onMessage) => void;\n    emit: (event: string, message: Message) => void;\n}\n\nexport const voidContext: SocketContext = {\n    socket: Socket,\n    suscribe: (event: string, onmessage: onMessage) => console.warn('undefined'),\n    emit: (event: string, message: Message) => console.warn('undefined'),\n};\n\nexport const SocketContext = React.createContext(voidContext);\n\nexport const SocketProvider = ({ children }) => {\n    const [socket] = useState<Socket>(io('http://localhost:3002'));\n    const emit = (event: string, message: Message) => {\n        socket.emit(event, message);\n    };\n    const suscribe = (event: string, onMessage: onMessage) => {\n        socket.on(event, onMessage);\n    };\n    const context = { socket, suscribe, emit };\n    return <SocketContext.Provider value={context}>{children}</SocketContext.Provider>;\n};\n","import { useEffect } from 'react';\n\ninterface KeyHandlers {\n    [key: string]: (event?: React.SyntheticEvent) => void;\n}\n\nconst useKeydown = (keyMap: KeyHandlers) => {\n    const keyHandler = event => keyMap[event.code] && keyMap[event.code](event);\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyHandler);\n\n        return () => document.removeEventListener('keydown', keyHandler);\n    });\n};\n\nexport default useKeydown;\n","import React, { useState} from 'react';\ninterface TitleContext {\n    title: string;\n    setTitle: (newTitle: string) => void;\n}\nconst voidContext: TitleContext = {\n    title: '',\n    setTitle: newTitle => {},\n};\nconst TitleContext = React.createContext<TitleContext>(voidContext);\n\nconst TitleProvider: React.FC = ({ children }) => {\n    const [title, setTitle] = useState('Proyecto final de ingeniería');\n\n    const TitleHandler = {\n        title,\n        setTitle,\n    };\n\n    return <TitleContext.Provider value={TitleHandler}>{children}</TitleContext.Provider>;\n};\n\nexport { TitleContext, TitleProvider };\n","import { TitleContext } from '../context/Title';\nimport { useContext } from 'react';\n\ninterface Handler {\n    title: string;\n    updateTitle: (newTitle: string) => void;\n}\n\nconst useTitle = () => {\n    const { title, setTitle } = useContext(TitleContext);\n    const updateTitle = (newTitle: string) => {\n        if (newTitle) setTitle(newTitle);\n    };\n    return {\n        title,\n        updateTitle,\n    };\n};\n\nexport default useTitle;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Break.scss';\nconst Break: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('noencontreicono');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <h1>Break</h1>\n        </div>\n    );\n};\n\nexport default Break;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationCell.scss';\ntype Data = { weight: number; output: number };\nconst data: Array<Data> = [\n    {\n        weight: 5,\n        output: 0.768,\n    },\n    {\n        weight: 10,\n        output: 0.979,\n    },\n    {\n        weight: 15,\n        output: 1.218,\n    },\n    {\n        weight: 25,\n        output: 1.663,\n    },\n    {\n        weight: 35,\n        output: 2.08,\n    },\n    {\n        weight: 45,\n        output: 2.53,\n    },\n];\n\nconst CalibrationCell: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [step, setStep] = useState<number>(0);\n    const visibleData = data.slice(0, step);\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n\n    const iterate = (): void => {\n        setStep((prev: number) => {\n            return prev < data.length - 1 ? ++prev : 0;\n        });\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Metodo empleado - Celda de carga');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration\">\n            <div className=\"left\">\n                <span className=\"label\">Celda de carga</span>\n                <div className=\"load-cell\">\n                    {visibleData.map((_: Data, index: number) => {\n                        return <div key={`weight${index}`} className=\"weight\" />;\n                    })}\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"console\">\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                    <div className=\"cpu\">\n                        <img alt=\"cpu-icon\" key=\"cpu\" src={`${urlPrefix}/cpu-2.png`} />\n                    </div>\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                </div>\n                <span className=\"label\">Circuito adaptador</span>\n            </div>\n            <div className=\"right\">\n                <div className=\"chart\">\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={visibleData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis dataKey=\"output\" tickCount={6} type=\"number\" domain={[0, 2.5]} />\n                            <XAxis dataKey=\"weight\" tickCount={12} type=\"number\" domain={[0, 40]} />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                dataKey=\"output\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={2}\n                                dot={{ stroke: '#7f2b32', strokeWidth: 3 }}\n                                name=\"Torque [Kg]\"\n                                animationDuration={400}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationCell;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationEncoder.scss';\ntype ChartData = { time: number; speed: number };\nconst initial = [];\nconst datasetLength = 15;\nconst CalibrationEncoder: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [active, setActive] = useState<boolean>(false);\n    const [dataset, setDataset] = useState<Array<ChartData>>(initial);\n    const [currentValue, setCurrentValue] = useState<number>(0);\n    const weight = Math.random() * 600 + 700;\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n\n    const addData = (): void => {\n        const noise = (Math.random() - 0.5) * 3;\n        const newValue = weight + noise;\n        setCurrentValue(active ? Math.round(newValue) : 0);\n        setDataset((_prev: Array<ChartData>) => {\n            const newData = { time: new Date().getTime(), speed: active ? newValue : 0 };\n            let newDataset = [..._prev];\n            if (_prev.length < datasetLength) newDataset.push(newData);\n            else newDataset = [..._prev.slice(1), newData];\n            return newDataset;\n        });\n    };\n    const iterate = (): void => {\n        setActive((prev: boolean) => !prev);\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        const interval = setInterval(addData, 250);\n        return () => {\n            if (interval) {\n                clearInterval(interval);\n            }\n        };\n    }, [active]);\n    useEffect(() => {\n        updateTitle('Metodo empleado - Celda del encoder');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration\">\n            <div className=\"left\">\n                <span className=\"label\">Encoder</span>\n                <div\n                    className={`encoder ${\n                        active ? (currentValue > 700 ? 'active-fast' : 'active') : ''\n                    } `}>\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                    <span className=\"hole\" />\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"console\">\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                    <div className=\"cpu\">\n                        <img alt=\"cpu-icon\" key=\"cpu\" src={`${urlPrefix}/cpu-2.png`} />\n                    </div>\n                    <div className=\"wire-container\">\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                        <span className=\"wire\" />\n                    </div>\n                </div>\n                <span className=\"label\">Circuito adaptador</span>\n            </div>\n            <div className=\"right\">\n                <div className=\"chart\">\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={dataset}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis name=\"speed\" dataKey=\"speed\" />\n                            <XAxis dataKey=\"time\" hide />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                type=\"linear\"\n                                dataKey=\"speed\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={1}\n                                dot={{ strokeWidth: 1 }}\n                                name=\"Velocidad [rpm]\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationEncoder;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ReactSpeedometer from 'react-d3-speedometer';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './CalibrationMethods.scss';\n\ntype Data = { time: number; torque: number };\nconst initial = [];\nconst datasetLength = 15;\n\n\nconst CalibrationMethods: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [active, setActive] = useState<boolean>(false);\n    const [dataset, setDataset] = useState<Array<Data>>(initial);\n    const [currentValue, setCurrentValue] = useState<number>(0);\n    const weight = Math.random() * 30 + 5;\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n\n    const addData = (): void => {\n        const noise = (Math.random() - 0.5) * 2;\n        const newValue = weight + noise;\n        setCurrentValue(active ? Math.round(newValue) : 0);\n        setDataset((prev: Array<Data>) => {\n            const newData = { time: new Date().getTime(), torque: active ? newValue : 0 };\n            let newDataset = [...prev];\n            if (prev.length < datasetLength) newDataset.push(newData);\n            else newDataset = [...prev.slice(1), newData];\n            return newDataset;\n        });\n    };\n    const iterate = () => {\n        setActive((prev: boolean) => !prev);\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        const interval = setInterval(addData, 250);\n        return () => {\n            if (interval) {\n                clearInterval(interval);\n            }\n        };\n    }, [active]);\n\n    useEffect(() => {\n        updateTitle('Métodos de validación');\n    }, [updateTitle]);\n\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n    return (\n        <div className=\"slide calibration-methods\">\n            <div className=\"left\">\n                <div className=\"balance\">\n                    <ReactSpeedometer\n                        value={currentValue}\n                        currentValueText={`${currentValue} Kg.`}\n                        maxValue={50}\n                        minValue={0}\n                        segments={3}\n                        ringWidth={20}\n                        startColor=\"#1d3f3b45\"\n                        endColor=\"#1d3f3bcc\"\n                        needleColor=\"#7f2b32\"\n                        maxSegmentLabels={0}\n                        height={240}\n                        width={240}\n                        needleTransitionDuration={2000}\n                        needleTransition=\"easeElastic\"\n                    />\n                    <span className=\"label\">Balanza</span>\n                    <img\n                        className={`arrow ${active ? 'active' : ''}`}\n                        alt=\"icon-arrow-down\"\n                        src={`${urlPrefix}/arrow-down.png`}\n                    />\n                </div>\n            </div>\n            <div className=\"center\">\n                <div className=\"axis\"></div>\n                <div className=\"load-cell\">\n                    <img\n                        className={`arrow ${active ? 'active' : ''}`}\n                        alt=\"icon-arrow-down\"\n                        src={`${urlPrefix}/arrow-down.png`}\n                    />\n                    <ResponsiveContainer height={'100%'}>\n                        <LineChart data={dataset}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <YAxis name=\"torque\" tickCount={datasetLength} dataKey=\"torque\" />\n                            <XAxis dataKey=\"time\" hide />\n                            <Legend />\n                            <Tooltip />\n                            <Line\n                                type=\"linear\"\n                                dataKey=\"torque\"\n                                stroke=\"#7f2b32\"\n                                strokeWidth={1}\n                                dot={{ strokeWidth: 1 }}\n                                name=\"Torque [Kg]\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <span className=\"label\">Celda de carga</span>\n                </div>\n            </div>\n            <div className=\"right\">\n                <img\n                    className={`motor ${active ? 'active' : ''}`}\n                    alt=\"break-icon\"\n                    src={`${urlPrefix}/break-small.png`}\n                />\n                <span className=\"label\">Freno</span>\n            </div>\n        </div>\n    );\n};\n\nexport default CalibrationMethods;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Conclusions.scss';\nconst Conclusions: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Conclusiones');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line right top\" />\n            <div className=\"conclusions\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        <p className=\"headline\">Calidad de la información</p>\n                        <span>Se mejoró tanto la adquisición como procesamientos de datos</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Control y visualización de la información</p>\n                        <span>\n                            {' '}\n                            Mejorar las estadísticas sobre el motor para analizar los\n                            comportamientos temporales. Memorias de ensayos\n                        </span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Escalabilidad</p>\n                        <span>\n                            Se logró el desarrollo de una solución abierta a modificaciones y\n                            mejoras\n                        </span>\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line left bottom\" />\n        </div>\n    );\n};\n\nexport default Conclusions;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Console.scss';\n\nconst CentralIcon = posed.div({\n    exit: { opacity: 0, scale: 0 },\n    enter: { opacity: 1, scale: 1, staggerChildren: 80, delayChildren: 500 },\n});\nconst Item = posed.div({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n});\nconst Lines = posed.span({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n});\nconst Console: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Consola');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <CentralIcon className=\"console\">\n                <Lines key=\"line1\" className=\"lines\" />\n                <Item key=\"battery\" className=\"items\">\n                    <img alt='battery-icon' src={`${urlPrefix}/battery.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line2\" className=\"lines\" />\n                <Item key=\"fan\" className=\"items\">\n                    <img alt='fan-icon' src={`${urlPrefix}/fan.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line3\" className=\"lines\" />\n                <Item key=\"fuel\" className=\"items\">\n                    <img alt='fuel-icon' src={`${urlPrefix}/fuel.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line4\" className=\"lines\" />\n                <Item key=\"ignition\" className=\"items\">\n                    <img alt='ignition-icon' src={`${urlPrefix}/ignition.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line5\" className=\"lines\" />\n                <Item key=\"speed\" className=\"items\">\n                    <img alt='speed-icon' src={`${urlPrefix}/speed.png`} className=\"icon\" />\n                </Item>\n\n                <Lines key=\"line6\" className=\"lines\" />\n                <Item key=\"temperature\" className=\"items\">\n                    <img alt='temperature-icon' src={`${urlPrefix}/temperature.png`} className=\"icon\" />\n                </Item>\n                <Lines key=\"line7\" className=\"lines\" />\n                <div className=\"main\">\n                    <img alt='cpu-icon' key=\"cpu\" className=\"icon\" src={`${urlPrefix}/cpu.png`} />\n                </div>\n            </CentralIcon>\n        </div>\n    );\n};\n\nexport default Console;\n","import React, { useEffect, useState, useContext, useRef } from 'react';\nimport posed from 'react-pose';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport { SocketContext } from '../../context/Socket';\nimport './CurrentSituation.scss';\n\nconst AnimatedList = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 120,\n        delayChildren: 400,\n        transition: {\n            default: { duration: 100 },\n        },\n    },\n});\nconst Overlay = posed.div({\n    exit: {\n        opacity: 0,\n        zIndex: 0,\n    },\n    enter: {\n        opacity: 1,\n        zIndex: 2,\n        transition: {\n            default: { duration: 150 },\n        },\n    },\n});\nconst AnimatedImg = posed.div({\n    exit: { opacity: 0 },\n    enter: { opacity: 1 },\n    selected: {\n        zIndex: 3,\n        scale: 1.3,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n    unselected: {\n        zIndex: 1,\n        scale: 1,\n        transition: {\n            default: { ease: 'easeOut', duration: 400 },\n            zIndex: { duration: 100 },\n        },\n    },\n});\ntype ImageData = { name: string; alt: string };\nconst sources: Array<ImageData> = [\n    { name: 'console', alt: 'Consola' },\n    { name: 'break', alt: 'Freno' },\n    { name: 'sensor', alt: 'Encoder' },\n    { name: 'console-2', alt: 'Control del freno' },\n    { name: 'engine', alt: 'Motor y freno' },\n];\nconst CurrentSituation: React.FC = () => {\n    const { socket } = useContext(SocketContext);\n    const { updateTitle } = useTitle();\n    const [index, setIndex] = useState(sources.length - 1);\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    const interval = useRef(null);\n\n    const iterate = () => {\n        setIndex((index: number) => (index >= sources.length - 1 ? 0 : index + 1));\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle(' ');\n\n        interval.current = setInterval(iterate, 10000);\n        return () => clearInterval(interval.current);\n    }, [updateTitle]);\n\n    useEffect(() => {\n        // next image\n        socket.on('iterate', () => {\n            clearInterval(interval.current);\n            iterate();\n            // stop animation\n            // interval.current = setInterval(iterate, 10000);\n        });\n    }, [socket]);\n\n    return (\n        <div className=\"container\">\n            <Overlay className=\"overlay\" key=\"overlay\" />\n            <AnimatedList key=\"list\" className=\"slide currentSituation\">\n                {sources.map(({ name, alt }, i: number) => {\n                    const src = `${urlPrefix}/${name}.jpg`;\n                    return (\n                        <AnimatedImg\n                            className=\"picture\"\n                            pose={index === i ? 'selected' : 'unselected'}\n                            key={src}>\n                            <img src={src} alt={alt} />\n                            {index === i && <p>{alt}</p>}\n                        </AnimatedImg>\n                    );\n                })}\n            </AnimatedList>\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Enhancements.scss';\nconst Enhancements: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Mejoras futuras');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"enhancements\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        <p className=\"headline\">Control del freno</p>\n                        <span>Implementación del control del freno</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Adquisición de datos</p>\n                        <span>Extender adquisición de datos para los diferentes sensores presentes en la\n                        consola</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Analisis de los datos</p>\n                        <span>Anexar estudios de consumo de los elementos presentes en sala.</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Ajustes</p>\n                        <span>Inserción de parámetros para correción de ensayos</span>\n                    </li>\n                    \n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Enhancements;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Inputs.scss';\n\nconst AnimatedDiagram = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n    },\n});\nconst Line = posed.div({\n    exit: { width: '0' },\n    enter: { width: '90%', transition: { duration: 1000 } },\n});\nconst AnimatedBlock = posed.div({\n    exit: { rotateY: '-90deg' },\n    enter: { rotateY: '0deg', transition: { delay: 100, duration: 600 } },\n});\nconst Inputs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Procesamiento de entradas');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide inputs\">\n            <AnimatedDiagram key=\"speed\" className=\"diagram\">\n                <AnimatedBlock key=\"speed-block1\" className=\"block\">\n                    <p className=\"title\">Celda de carga</p>\n                    <div className=\"connections\">\n                        <span>\n                            Torque\n                            <br />\n                            [Kg]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/load-cell.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block3\" className=\"result\">\n                    <p className=\"title\">Entrada analógica</p>\n                </AnimatedBlock>\n                <Line key=\"speed-line\" className=\"connector\" />\n            </AnimatedDiagram>\n            <AnimatedDiagram key=\"torque\" className=\"diagram\">\n                <AnimatedBlock key=\"torque-block1\" className=\"block\">\n                    <p className=\"title\">Encoder</p>\n                    <div className=\"connections\">\n                        <span>\n                            Velocidad\n                            <br />\n                            [PPV]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/encoder.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block3\" className=\"result\">\n                    <p className=\"title\">Entrada digital</p>\n                </AnimatedBlock>\n                <Line key=\"torque-line\" className=\"connector\" />\n            </AnimatedDiagram>\n        </div>\n    );\n};\n\n//<img src={`${urlPrefix}/inputs.png`} />\nexport default Inputs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Linealization.scss';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Legend,\n    ResponsiveContainer,\n    Tooltip,\n} from 'recharts';\nconst data = [\n    {\n        kg: 5,\n        v: 0.768,\n    },\n    {\n        kg: 10,\n        v: 0.979,\n    },\n    {\n        kg: 15,\n        v: 1.218,\n    },\n    {\n        kg: 25,\n        v: 1.663,\n    },\n    {\n        kg: 35,\n        v: 2.08,\n    },\n    {\n        kg: 45,\n        v: 2.53,\n    },\n];\n\nconst Linealization: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Linealización');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide linealization\">\n            <ResponsiveContainer height={'80%'}>\n                <LineChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis name='Kg.' tickCount={12} type=\"number\" domain={[0, 'dataMax + 5']} dataKey=\"kg\" />\n                    <YAxis name='Volts'/>\n                    <Legend />\n                    <Tooltip />\n                    <Line\n                        type=\"linear\"\n                        dataKey=\"v\"\n                        stroke=\"#7f2b32\"\n                        strokeWidth={2}\n                        dot={{ strokeWidth: 6 }}\n                        name=\"Volts vs Kg\"\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default Linealization;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './MainBlocks.scss';\n\nconst AnimatedList = posed.ul({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        staggerChildren: 500,\n    },\n});\nconst AnimatedItem = posed.li({\n    exit: { opacity: 0, rotateX: '-90deg' },\n    enter: { opacity: 1, rotateX: '0deg' },\n});\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Partes principales');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <AnimatedList className=\"main-blocks\">\n                <AnimatedItem key=\"engine\" className=\"block first\">\n                    <img alt='motor-icon' className=\"icon\" src={`${urlPrefix}/engine.png`} />\n                    <span className=\"name\">Motor</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"panel\" className=\"block\">\n                    <img className=\"icon\" alt='consola-icon' src={`${urlPrefix}/panel.png`} />\n                    <span className=\"name\">Consola</span>\n                </AnimatedItem>\n                <AnimatedItem key=\"break\" className=\"block\">\n                    <img className=\"icon\" alt='break-icon' src={`${urlPrefix}/break-small.png`} />\n                    <span className=\"name\">Freno</span>\n                </AnimatedItem>\n            </AnimatedList>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Objectives.scss';\nconst Objectives: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Propuesta de desarrollo');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"objectives\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        <p className=\"headline\">\n                            Modificación de métodos de adquisición y procesamiento de señales\n                        </p>\n                        <span>Selección de sensores. Desarrollo de Hardware </span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Diseño de arquitectura</p>\n                        <span>\n                            Selección de controlador. Desarrollo de Software y su correspondiente\n                            interfaz\n                        </span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Controlador de freno electrico</p>\n                        <span>\n                            Diseño e implementación de algoritmo de control y hardware relacionado\n                        </span>\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Objectives;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Outputs.scss';\nconst AnimatedDiagram = posed.div({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n    },\n});\nconst Line = posed.div({\n    exit: { width: '0' },\n    enter: { width: '100%', transition: { delay: 100, duration: 1000 } },\n});\nconst AnimatedBlock = posed.div({\n    exit: { rotateY: '-90deg' },\n    enter: { rotateY: '0deg', transition: { duration: 600 } },\n});\n\nconst Outputs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Procesamiento de salidas');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide outputs\">\n            <Line key=\"line\" className=\"connector\" />\n            <AnimatedDiagram key=\"speed\" className=\"diagram\">\n                <Line key=\"speed-line\" className=\"connector\" />\n                <AnimatedBlock key=\"speed-block1\" className=\"result\">\n                    <p className=\"title\">Salida digital</p>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"speed-block3\" className=\"block\">\n                    <p className=\"title\">Actuador de la ventilación</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/pistas.jpg`} />\n                        <span>\n                            Ventilación\n                            <br />\n                            [On/Off]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n            <AnimatedDiagram key=\"torque\" className=\"diagram\">\n                <Line key=\"torque-line\" className=\"connector\" />\n                <AnimatedBlock key=\"torque-block1\" className=\"result\">\n                    <p className=\"title\">Salida PWM sincronizada</p>\n                </AnimatedBlock>\n                <AnimatedBlock key=\"torque-block2\" className=\"block\">\n                    <p className=\"title\">Adaptador</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/schematic.png`} />\n                        <span>\n                            Tensión\n                            <br />\n                            [mV]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n\n                <AnimatedBlock key=\"torque-block3\" className=\"block\">\n                    <p className=\"title\">Actuador del freno</p>\n                    <div className=\"connections\">\n                        <span>\n                            Tensión\n                            <br />\n                            [V]\n                        </span>\n                        <img alt=\"celda-icon\" src={`${urlPrefix}/pistas.jpg`} />\n                        <span>\n                            Torque\n                            <br />\n                            [Kg]\n                        </span>\n                    </div>\n                </AnimatedBlock>\n            </AnimatedDiagram>\n        </div>\n    );\n};\n\nexport default Outputs;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Requirements.scss';\nconst Requirements: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Requerimientos');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <span className=\"line left top\" />\n            <div className=\"requirements\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        <p className=\"title\">Sensado:</p>\n                        <span>Medición, visualización y almacenamiento:</span>\n                        <div className=\"row\">\n                            <div className=\"resolution\">\n                                <span className=\"label\">Torque</span>\n                                <p className=\"value\">\n                                    35 <span className=\"unit\">kg</span>\n                                </p>\n                            </div>\n                            <div className=\"resolution\">\n                                <span className=\"label\">Velocidad</span>\n                                <p className=\"value\">\n                                    12.000 <span className=\"unit\">rpm</span>\n                                </p>\n                            </div>\n                        </div>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"title\"> Comando de elementos presentes de la sala</p>\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Requirements;\n","import React, { useEffect } from 'react';\nimport posed from 'react-pose';\nimport { useTitle } from '../../hooks';\nimport './Controller.scss';\n\nconst Controller = posed.div({\n    exit: { opacity: 0, rotateY: '-90deg', transition: { duration: 200, delay: 400 } },\n    enter: { opacity: 1, rotateY: '0deg', transition: { duration: 200, delay: 400 } },\n});\n\nconst Schematic: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/images' : '/thesis-presentation/images';\n    useEffect(() => {\n        updateTitle('Selección del controlador');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide controllers\">\n            <Controller key=\"section-arduino\" className=\"section\">\n                <img alt=\"arduino\" src={`${urlPrefix}/arduino.jpg`} />\n                <div className=\"info\">\n                    <p className=\"title\">Arduino UNO</p>\n                    <ul className=\"list\">\n                        <li className=\"item good\">Costo</li>\n                        <li className=\"item good\">Complejidad</li>\n                        <li className=\"item good\">Compatibilidad</li>\n                        <li className=\"item bad\">Recursos</li>\n                    </ul>\n                </div>\n            </Controller>\n            <Controller key=\"section-freescale\" className=\"section\">\n                <div className=\"info\">\n                    <p className=\"title\">Freescale KL46Z</p>\n                    <ul className=\"list\">\n                        <li className=\"item good\">Recursos</li>\n                        <li className=\"item good\">Compatibilidad</li>\n                        <li className=\"item normal\">Costo</li>\n                        <li className=\"item bad\">Complejidad</li>\n                    </ul>\n                </div>\n                <img alt=\"freedom\" src={`${urlPrefix}/freedom.jpg`} />\n            </Controller>\n        </div>\n    );\n};\n\nexport default Schematic;\n","import React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport './AnimatedList.scss';\n\ninterface Props {\n    items: Array<any>;\n}\n\nconst AnimatedItem = posed.ul({\n    exit: { opacity: 0, height: 0 },\n    enter: {\n        opacity: 1,\n        height: 'auto',\n    },\n    unselected: {\n        position: 'static',\n        width: '100%',\n        height: 'auto',\n        flip: true,\n    },\n    selected: {\n        position: 'fixed',\n        width: '100%',\n        left: 0,\n        bottom: 0,\n        flip: true,\n    },\n});\n\nconst AnimatedList: React.FC<Props> = ({ items }) => {\n    return (\n        <div className=\"list\">\n            <PoseGroup>\n                {items.map((item: any, index: number) => {\n                    return (\n                        <AnimatedItem pose={'enter'} key={`item${index}`}>\n                            <div className={`content `}>{item.name}</div>\n                        </AnimatedItem>\n                    );\n                })}\n            </PoseGroup>\n        </div>\n    );\n};\n\nexport default AnimatedList;\n","const Icons = {\n    cpu:\n        'M15 9H9v6h6V9zm-2 4h-2v-2h2v2zm8-2V9h-2V7c0-1.1-.9-2-2-2h-2V3h-2v2h-2V3H9v2H7c-1.1 0-2 .9-2 2v2H3v2h2v2H3v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2zm-4 6H7V7h10v10z',\n    computer:\n        'M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z',\n    discrete: 'M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z',\n    equalizer: 'M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z',\n    hub:\n        'M17 16l-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z',\n    lightSignal:\n        'M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z',\n    message:\n        'M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z',\n    message2:\n        'M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z',\n    plot: 'M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z',\n    weight:\n        'M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z',\n    resistor:\n        'M24.272 22.416c-0.415 0-0.794-0.247-0.959-0.633l-3.509-8.186l-2.818 8.118 c-0.145 0.416-0.536 0.697-0.978 0.701c-0.002 0-0.005 0-0.008 0c-0.438 0-0.83-0.272-0.98-0.685l-2.922-7.957l-2.838 7.95 c-0.146 0.407-0.528 0.683-0.962 0.691c-0.435 0.009-0.827-0.251-0.989-0.654l-2.191-5.439h-5.219v-2.087h5.924 c0.426 0 0.809 0.258 0.968 0.653l1.428 3.545l2.883-8.076c0.148-0.414 0.539-0.69 0.979-0.693c0.001 0 0.002 0 0.004 0 c0.437 0 0.829 0.273 0.98 0.685l2.906 7.92l2.743-7.903c0.142-0.408 0.521-0.686 0.949-0.701c0.433-0.015 0.827 0.236 0.997 0.632 l3.457 8.066l1.062-3.396c0.136-0.436 0.54-0.733 0.996-0.733h5.925v2.087h-5.156l-1.678 5.361 c-0.13 0.418-0.506 0.709-0.942 0.731C24.308 22.416 24.29 22.416 24.272 22.416z',\n    sensor:\n        'M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z',\n    sensor2:\n        'M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16zM18 6h-5c-1.1 0-2 .9-2 2v2.28c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V8h3v8H8V8h2V6H6v12h12V6z',\n    share:\n        'M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z',\n    signal: 'M7 18h2V6H7v12zm4 4h2V2h-2v20zm-8-8h2v-4H3v4zm12 4h2V6h-2v12zm4-8v4h2v-4h-2z',\n    signal2:\n        'M30.857 16H24c-0.524 0-0.98 0.356-1.108 0.865l-1.905 7.619L18.277 1.011c-0.072-0.627-0.641-1.076-1.268-1.003 c-0.49 0.057-0.888 0.422-0.987 0.906l-3.622 18.114l-2.155-7.9c-0.165-0.609-0.793-0.969-1.402-0.804 c-0.347 0.094-0.629 0.346-0.763 0.679L6.083 16h-4.94C0.512 16 0 16.512 0 17.143s0.512 1.143 1.143 1.143h5.714 c0.468 0 0.889-0.284 1.062-0.719l1.018-2.547l2.532 9.282c0.135 0.497 0.587 0.842 1.103 0.842h0.039 c0.528-0.018 0.976-0.396 1.081-0.914l3.147-15.743l2.598 22.502c0.063 0.549 0.509 0.974 1.061 1.011L20.571 32 c0.524-0.001 0.98-0.357 1.107-0.867l3.214-12.848h5.965c0.631 0 1.143-0.512 1.143-1.143S31.488 16 30.857 16z',\n    voiceSensor:\n        'M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z',\n    voiceSignal:\n        'M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z',\n    line:\n        'M135.603 33.995c-45.048 0-90.037 0-135.043 0c0-1.028 0-2.056 0-3.102 c45 0 90.017 0 135.043 0C135.603 31.916 135.603 32.957 135.603 33.995z',\n    thanks:\n        'M136.118  27.406c-2.683  1.123-5.358  2.264-8.05  3.363 c-1.663  0.679-3.344  1.318-5.032  1.927c-0.646  0.233-0.802  0.571-0.735  1.251c0.471  4.899-3.428  8.204-8.259  7.038 c-2.024-0.489-2.753-2.546-1.172-3.879c1.595-1.345  3.44-2.468  5.33-3.362c1.298-0.613  1.631-1.28  1.238-2.537 c-0.127-0.406-0.153-0.844-0.273-1.552c-0.499  0.608-0.859  1.048-1.221  1.488c-2.003  2.444-4.282  4.536-7.324  5.618 c-3.55  1.262-4.888  0.468-5.361-3.16c-0.707  0.676-1.355  1.42-2.128  1.999c-0.787  0.589-1.643  1.181-2.563  1.477 c-2.314  0.745-4.176-0.624-4.318-3.039c-0.025-0.433-0.004-0.868-0.004-1.513c-0.643  0.585-1.147  1.066-1.674  1.522 c-1.749  1.514-3.706  2.65-5.994  3.106c-2.573  0.513-3.839-0.506-3.843-3.129C84.733  32.8  84.906  31.577  85  30.352 c-1.546  1.224-3.006  2.607-4.681  3.645c-1.882  1.166-3.871  2.301-5.968  2.945c-3.541  1.087-5.378-0.247-5.957-3.821 c-1.242  0.896-2.414  1.947-3.765  2.657c-1.282  0.674-2.721  1.19-4.147  1.416c-1.976  0.313-2.972-0.684-3.114-2.687 c-0.021-0.303-0.027-0.607-0.039-0.877c-0.763  0.695-1.476  1.368-2.213  2.013c-1.043  0.911-2.183  1.615-3.64  1.607 c-1.828-0.009-3.123-1.053-3.167-2.883c-0.036-1.484  0.27-2.977  0.428-4.512c-0.077  0.023-0.354  0.093-0.618  0.191 c-1.197  0.444-2.373  0.955-3.59  1.332c-2.271  0.705-3.586  0.238-4.973-1.697c-0.581-0.811-1.119-1.653-1.657-2.493 c-0.552-0.861-1.332-1.005-2.02-0.365c-1.07  0.998-2.202  2.026-2.942  3.26c-1.288  2.146-2.305  4.456-3.42  6.705 c-0.293  0.591-0.381  1.441-1.308  1.271c-0.974-0.179-1.286-1.012-1.135-1.836c0.271-1.486  0.706-2.943  1.101-4.405 c0.173-0.639  0.414-1.259  0.57-1.725c-3.632  2.131-7.323  4.274-10.981  6.474c-0.422  0.254-0.782  0.776-0.955  1.252 c-1.387  3.826-2.592  7.724-4.128  11.487c-0.769  1.883-1.938  3.678-3.245  5.245c-1.567  1.88-3.904  2.23-6.251  2.091 c-1.469-0.088-2.315-1.102-2.907-2.354c0-1.04  0-2.08  0-3.12c2.037-6.391  7.431-9.533  12.57-12.885 c1.035-0.675  1.573-1.477  1.835-2.76c-0.694  0.442-1.252  0.859-1.861  1.176c-2.916  1.52-5.481  0.019-5.357-3.241 c0.145-3.787  2.04-6.622  5.366-8.353c2.15-1.119  4.195-0.628  5.921  1.282c0.369-0.497  0.647-0.977  1.03-1.35 c0.257-0.25  0.716-0.545  0.985-0.469c0.349  0.098  0.823  0.531  0.844  0.847c0.042  0.632-0.069  1.333-0.326  1.914 c-1.076  2.445-2.232  4.855-3.352  7.282c-0.076  0.166-0.094  0.359-0.184  0.724c4.167-2.241  8.19-4.36  11.586-7.431 c0.638-0.577  0.858-1.596  1.362-2.35c0.253-0.378  0.935-0.938  1.038-0.865c0.47  0.329  1.074  0.825  1.125  1.313 c0.086  0.826-0.209  1.691-0.366  2.677c0.512-0.62  0.925-1.194  1.415-1.693c0.585-0.594  1.173-1.222  1.87-1.661 c1.978-1.246  3.251-0.951  4.573  0.948c0.685  0.981  1.294  2.021  2.043  2.948c0.8  0.989  1.848  1.318  3.105  0.807 c2.182-0.887  4.398-1.674  6.045-3.516c0.516-0.578  1.242-1.022  1.951-1.363c2.192-1.052  4.193-0.743  5.753  0.999 c0.72-0.391  1.306-0.836  1.966-1.021c0.423-0.119  1.077  0.01  1.392  0.292c0.188  0.167-0.012  0.872-0.161  1.291 c-0.731  2.057-1.617  4.068-2.207  6.163c-0.232  0.822-0.139  2.322  0.349  2.616c0.658  0.397  1.954  0.176  2.774-0.21 c2.645-1.248  4.811-3.091  6.217-5.742c1.258-2.371  2.953-4.294  5.728-4.886c1.919-0.409  3.575  0.582  3.854  2.282 c0.053  0.318-0.179  0.683-0.279  1.026c-0.229-0.207-0.437-0.446-0.691-0.613c-0.427-0.278-0.859-0.614-1.336-0.726 c-0.343-0.081-0.808  0.084-1.14  0.276c-2.541  1.466-4.153  3.611-4.41  6.58c-0.152  1.765  0.57  2.462  2.325  2.344 c0.897-0.061  1.846-0.238  2.653-0.614c3.677-1.713  6.667-4.373  9.531-7.177c0.44-0.431  0.591-1.153  1.021-1.603 c0.499-0.523  1.107-1.011  1.765-1.288c0.376-0.159  1.059-0.003  1.378  0.271c0.19  0.165  0.027  0.863-0.117  1.272 c-0.751  2.133-1.653  4.22-2.271  6.389c-0.219  0.768-0.068  2.125  0.435  2.483c0.541  0.387  1.779  0.121  2.563-0.214 c2.957-1.261  5.093-3.485  6.864-6.131c0.768-1.146  1.643-2.284  2.686-3.17c2.437-2.068  4.813-1.956  7.168  0.101 c0.616-0.348  1.187-0.795  1.833-0.994c0.434-0.133  1.152-0.078  1.413  0.202c0.217  0.232  0.039  0.945-0.115  1.392 c-0.729  2.1-1.614  4.152-2.215  6.286c-0.219  0.777-0.098  2.114  0.404  2.502c0.515  0.398  1.803  0.193  2.549-0.168 c3.674-1.775  6.419-4.547  8.129-8.268c0.73-1.588  2.835-2.822  4.531-2.378c0.537  0.14  1.03  0.559  1.459  0.943 c0.172  0.154  0.118  0.561  0.167  0.853c-0.284-0.018-0.598  0.035-0.848-0.066c-1.426-0.576-3.027  0.485-2.987  2.02 c0.016  0.558  0.082  1.117  0.152  1.671c0.071  0.554  0.178  1.104  0.273  1.691c0.099  0.005  0.218  0.045  0.309  0.01 c4.202-1.638  8.398-3.292  12.609-4.91c0.334-0.128  0.764-0.005  1.149  0C136.118  27.086  136.118  27.247  136.118  27.406z  M13.53  39.043c-3.483  2.161-6.53  4.275-9.106  6.992c-1.866  1.967-3.166  4.224-3.176  7.027c-0.007  1.899  1.332  2.92  3.188  2.489 c1.748-0.406  2.92-1.55  3.854-3.014C10.882  48.474  11.893  43.809  13.53  39.043z M58.863  27.009 c-0.824-0.063-1.568-0.266-2.259-0.148c-2.57  0.438-5.165  3.211-5.692  6.023c-0.186  0.99-0.693  2.229  0.385  2.871 c1.139  0.679  2.211-0.1  3.126-0.857C56.807  32.927  57.954  30.235  58.863  27.009z M18.378  27.65c-0.066-0.176-0.134-0.352-0.2-0.527 c-0.736-0.105-1.5-0.389-2.205-0.283c-3.258  0.492-6.25  4.471-5.966  7.803c0.098  1.146  0.696  1.676  1.758  1.207 c1.056-0.466  2.217-1.102  2.864-2C16.036  31.897  17.146  29.73  18.378  27.65z M106.853  27.048c-0.76-0.078-1.498-0.306-2.185-0.198 c-2.776  0.436-5.381  3.351-5.822  6.564c-0.104  0.754-0.032  1.86  0.434  2.291c0.786  0.729  1.795  0.093  2.633-0.393 c0.204-0.119  0.375-0.296  0.559-0.45C104.836  32.875  105.976  30.188  106.853  27.048z M119.625  33.887 c-1.996  1.228-3.947  2.354-5.799  3.626c-0.409  0.282-0.752  1.183-0.601  1.615c0.157  0.445  0.925  0.875  1.475  0.952 C117.823  40.512  120.534  37.295  119.625  33.887z',\n    thanks2:\n        'M2.856 23.073c0.794-2.485 1.84-4.806 3.82-6.626 c2.109-1.939 4.192-2.365 6.855-1.217c0.596-0.936 1.462-1.373 2.536-0.943c1.106 0.442 1.235 1.455 1.231 2.506 c-0.011 3.076-0.004 6.151-0.004 9.471c0.507-0.425 0.907-0.759 1.307-1.094c1.5-1.259 3.03-2.485 4.479-3.8 c0.386-0.351 0.646-0.95 0.751-1.478c0.277-1.406 0.349-2.855 0.673-4.247c0.301-1.29 1.324-1.774 2.586-1.438 c1.013 0.27 1.508 1.103 1.237 2.37c-0.719 3.358-0.945 6.714-0.017 10.142c0.15-0.613 0.259-1.239 0.458-1.835 c0.757-2.265 1.437-4.563 2.361-6.758c0.45-1.067 1.271-2.043 2.115-2.863c1.731-1.683 4.372-1.621 6.019 0.145 c0.888 0.952 1.475 2.178 2.32 3.176c0.451 0.532 1.117 0.97 1.773 1.212c0.672 0.248 1.161-0.142 1.656-0.775 c1.095-1.402 2.25-2.831 3.645-3.908c1.919-1.482 4.084-1.358 5.996-0.2c0.775-0.274 1.443-0.674 2.136-0.722 c1.432-0.101 2.182 0.915 1.863 2.333c-0.722 3.206-1.352 6.419-0.862 9.732c0.041 0.276 0.016 0.602 0.155 0.816 c0.458 0.701 0.86 1.566 1.525 1.945c0.302 0.172 1.38-0.506 1.745-1.044c1.581-2.331 3.188-4.669 4.482-7.163 c1.361-2.623 2.883-4.987 5.656-6.263c2.301-1.058 4.915-0.313 5.955 1.69c0.139 0.269-0.009 0.686-0.023 1.035 c-0.336-0.104-0.781-0.107-0.992-0.331c-1.148-1.22-1.697-1.341-3.104-0.292c-2.141 1.594-3.421 3.78-3.985 6.362 c-0.602 2.754-0.343 5.484 0.49 8.162c0.129 0.415 0.335 0.813 0.554 1.191c1.06 1.826 2.045 2.137 3.446 0.625 c2.135-2.304 4.031-4.833 5.968-7.313c1.798-2.301 3.021-4.846 3.103-7.853c0.019-0.704 0.261-1.41 0.457-2.1 c0.388-1.36 1.301-1.871 2.636-1.522c1.055 0.275 1.522 1.17 1.205 2.475c-0.713 2.929-1.187 5.888-0.897 8.903 c0.094 0.967 0.389 1.966 0.82 2.836c0.45 0.909 1.357 0.968 2.057 0.23c2.045-2.158 3.785-4.532 4.883-7.322 c0.896-2.278 2.229-4.238 4.141-5.777c2.218-1.785 4.444-1.929 6.817-0.514c0.449-0.284 0.842-0.666 1.306-0.8 c1.741-0.505 2.799 0.612 2.532 2.449c-0.391 2.679-0.748 5.369-0.944 8.066c-0.075 1.037 0.193 2.159 0.554 3.152 c0.529 1.454 1.657 1.684 2.592 0.481c1.638-2.106 3.117-4.335 4.625-6.539c0.177-0.257 0.194-0.689 0.147-1.021 c-0.457-3.185 2.378-6.179 5.364-6.581c1.817-0.245 3.603-0.089 5.198 0.939c0.397 0.256 0.819 0.566 1.053 0.957 c0.226 0.379 0.223 0.895 0.32 1.351c-0.429-0.077-0.938-0.032-1.273-0.251c-1.209-0.786-2.454-1.108-3.869-0.696 c-2.559 0.745-3.585 3.199-2.003 5.314c1.038 1.388 2.441 2.511 3.741 3.688c0.164 0.148 0.757 0.001 1.035-0.184 c2.56-1.701 5.094-3.44 7.633-5.171c0.227-0.154 0.44-0.326 0.662-0.492c0.813 0.559 0.777 1.11 0.042 1.619 c-2.363 1.634-4.737 3.253-7.113 4.87c-0.359 0.244-0.75 0.442-1.191 0.7c1.19 2.049 1.262 4.113 0.151 6.173 c-1.03 1.911-3.543 3.006-5.641 2.492c-2.208-0.542-2.949-3.7-1.254-5.625c0.732-0.831 1.649-1.497 2.543-2.291 c-1.545-1.369-3.14-2.782-4.842-4.291c-0.364 0.549-0.767 1.258-1.267 1.891c-1.307 1.656-2.493 3.455-4.025 4.874 c-2.449 2.268-5.269 1.411-6.375-1.752c-0.298-0.854-0.466-1.753-0.728-2.764c-0.515 0.936-0.946 1.772-1.43 2.578 c-0.266 0.442-0.598 0.852-0.938 1.241c-1.303 1.485-2.903 2.339-4.892 1.778c-1.943-0.549-2.831-2.092-3.17-3.991 c-0.083-0.463-0.119-0.935-0.197-1.577c-0.894 1.128-1.662 2.17-2.51 3.144c-0.547 0.628-1.16 1.222-1.828 1.719 c-2.122 1.58-4.613 0.999-5.637-1.452c-0.604-1.447-0.816-3.057-1.221-4.658c-0.259 0.402-0.548 0.929-0.911 1.399 c-2.05 2.646-4.024 5.36-6.228 7.873c-0.788 0.897-2.077 1.57-3.257 1.864c-2.457 0.612-4.987-0.893-5.825-3.475 c-0.559-1.723-0.685-3.586-0.996-5.389c-0.044-0.256-0.039-0.521-0.068-0.955c-0.95 1.188-1.74 2.271-2.632 3.263 c-1.336 1.487-2.807 2.924-5.047 2.219c-2.136-0.672-2.627-2.616-3.048-4.527c-0.065-0.297-0.094-0.602-0.183-1.188 c-0.469 0.882-0.725 1.603-1.178 2.166c-0.867 1.077-1.695 2.285-2.81 3.042c-2.33 1.584-5.249 0.432-6.19-2.285 c-0.819-2.361-0.553-4.724 0.221-7.264c-1.054 0-2.024-0.021-2.994 0.004c-2.158 0.057-3.749-0.804-4.813-2.729 c-1.278-2.315-2.277-2.308-3.659 0.021c-1.769 2.981-2.377 6.331-2.922 9.689c-0.115 0.709-0.195 1.425-0.265 2.141 c-0.096 0.994-0.677 1.319-1.574 1.113c-1.3-0.298-2.292-1.074-2.648-2.356c-0.446-1.607-0.714-3.265-1.038-4.905 c-0.091-0.458-0.107-0.93-0.189-1.691c-2.26 1.989-4.344 3.782-6.362 5.646c-0.285 0.263-0.334 0.865-0.357 1.316 c-0.34 6.674-0.913 13.317-2.701 19.789c-0.403 1.458-0.893 2.904-1.485 4.295c-0.801 1.878-1.982 3.463-4.021 4.188 c-0.561 0-1.12 0-1.681 0c-2.605-0.842-3.573-2.855-3.837-5.37c-0.305-2.909 0.084-5.732 1.073-8.478 c1.668-4.623 4.473-8.53 7.685-12.181c1.191-1.354 1.667-3.818 1.19-5.387c-0.963 1.251-1.852 2.822-3.122 3.969 c-2.464 2.224-5.825 1.202-6.915-1.92c-0.129-0.372-0.263-0.742-0.394-1.113C2.856 25.793 2.856 24.433 2.856 23.073z  M13.271 32.825c-3.899 3.345-7.415 9.43-8.364 14.024c-0.521 2.527-0.784 5.079 0.55 7.484c0.733 1.322 1.64 1.521 2.661 0.418 c0.717-0.772 1.393-1.713 1.711-2.699c0.793-2.461 1.569-4.959 1.991-7.502C12.463 40.669 12.803 36.736 13.271 32.825z  M46.912 25.554c0.247 0.954 0.39 1.952 0.768 2.851c0.471 1.118 1.275 1.316 2.174 0.488c0.772-0.713 1.453-1.59 1.964-2.511 c1.422-2.568 2.292-5.322 2.429-8.285c0.031-0.686 0.564-1.607-0.291-1.907c-0.617-0.216-1.485 0.114-2.184 0.362 c-0.462 0.164-0.861 0.576-1.219 0.944C48.386 19.728 47.151 22.375 46.912 25.554z M96.975 25.563 c0.292 1.018 0.5 2.068 0.898 3.042c0.36 0.878 1.17 1.036 1.857 0.423c0.759-0.677 1.497-1.45 2.004-2.322 c1.538-2.648 2.424-5.525 2.607-8.599c0.039-0.673 0.587-1.609-0.291-1.91c-0.621-0.212-1.471 0.141-2.186 0.352 c-0.357 0.105-0.672 0.424-0.956 0.698C98.566 19.501 97.253 22.226 96.975 25.563z M13.456 20.015c0-0.199 0.001-0.398 0-0.598 c-0.002-1.701-0.672-2.164-2.299-1.553c-0.404 0.152-0.79 0.382-1.144 0.634c-2.68 1.911-4.055 6.208-2.999 9.322 c0.597 1.76 1.595 2.065 2.872 0.696C12.104 26.143 13.085 23.193 13.456 20.015z M121.917 28.555 c-0.92 0.927-1.949 1.736-2.673 2.761c-0.7 0.992-0.285 2.331 0.598 2.829c0.878 0.496 2.105 0.092 2.788-0.918 C123.424 32.052 123.213 30.192 121.917 28.555z',\n};\n\nexport default Icons;\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d << read this\n","import React, { forwardRef } from 'react';\nimport posed from 'react-pose';\nimport { tween } from 'popmotion';\nimport { interpolate } from 'flubber';\nimport Icons from './Icons';\nimport './MorphingIcon.scss';\n\ntype Transition = ({ from, to }: { from: number; to: number }) => any;\n\nconst morphTransition: Transition = ({ from, to }) =>\n    tween({\n        from: 0,\n        to: 1,\n        duration: 200,\n    }).pipe(interpolate(from, to));\n\nconst Paths = Object.entries(Icons).reduce((paths, [name, path]) => {\n    const icon = {\n        d: path,\n        transition: morphTransition,\n    };\n    return { ...paths, [name]: icon };\n}, {});\n\nconst Icon = posed.path(Paths);\n\ninterface Props {\n    className?: string;\n    icon: string;\n    width?: number;\n    height?: number;\n    ref?: any;\n}\nconst MorphingIcon: React.FC<Props> = ({ className, icon, height, width }, ref) => {\n    return (\n        <svg\n            ref={ref}\n            className={`morphingIcon ${className}`}\n            width={width}\n            height={height}\n            viewBox=\"0 0 130 60\">\n            <Icon pose={icon} />\n        </svg>\n    );\n};\n\nexport default forwardRef(MorphingIcon);\n","import React, { useEffect, useState } from 'react';\nimport { MorphingIcon } from '../../components';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './Thanks.scss';\n\nconst CurrentSituation: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const [status, setStatus] = useState(false);\n    const iterate = () => {\n        setStatus((prev: boolean) => {\n            return !prev;\n        });\n    };\n\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Fin');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide \">\n            <span className=\"line left top\" />\n            <MorphingIcon width={260} height={120} icon={ status ? 'thanks' : 'line'} />\n        </div>\n    );\n};\n\nexport default CurrentSituation;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './Title.scss';\n\nconst Title: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Proyecto final de ingeniería');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <p className=\"main-title\">\n                Automatización de un banco de pruebas de un motor a combustión\n            </p>\n            <div className=\"author\">\n                <span>Alumnos</span>\n                <hr />\n                <div>\n                    <img className=\"avatar\" alt='avatar-icon' src={`${urlPrefix}/avatar.png`} />\n                    Cicetti, Joaquín\n                </div>\n                <div>\n                    <img className=\"avatar\" alt='avatar-icon' src={`${urlPrefix}/avatar.png`} />\n                    Morelli, Nahuel\n                </div>\n                <span>Director</span>\n                <hr />\n                <div>\n                    <img className=\"avatar director\" alt='avatar-icon' src={`${urlPrefix}/avatar-director.png`} />\n                    Simón, José\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default Title;\n","import React, { useEffect, useContext, useState } from 'react';\nimport posed from 'react-pose';\nimport { MorphingIcon } from '../../components';\nimport { SocketContext } from '../../context/Socket';\nimport { useTitle, useKeyDown } from '../../hooks';\nimport './Signals.scss';\nconst secuency = [\n    {\n        icon: 'weight',\n        title: 'Magnitud fisica',\n        body:\n            'Variable del mundo físico la cual se desea medir. Por ejemplo, la velocidad o el torque.',\n        examples: ['Velocidad de giro del eje', 'Torque ejercido', 'Temperatura ambiente'],\n    },\n    {\n        icon: 'resistor',\n        title: 'Sensor',\n        body: 'Dispositivo que transforma el flujo de energía en una señal electrica.',\n        examples: ['Encoder', 'Celda de carga', 'Termocupla'],\n    },\n    {\n        icon: 'equalizer',\n        title: 'Señal eléctrica',\n        body: 'Es una representación mesurable de la variable en cuestion',\n    },\n    {\n        icon: 'cpu',\n        title: 'Conversión',\n        body: 'Lectura, digitalización y procesamiento de la información',\n        examples: ['Conversión A/C', 'Muestreo', 'Filtrado'],\n    },\n    {\n        icon: 'message',\n        title: 'Difusión',\n        body: 'Intercambio de la información con los demas dispositivos',\n    },\n    {\n        icon: 'plot',\n        title: 'Visualización',\n        body: 'Etapa en la que la información procesada llega al usuario',\n        examples: ['Graficas', 'Paneles de control', 'Indicadores'],\n    },\n];\n\nconst Mobile = posed.div({\n    active: {\n        x: ({ x }) => `${x}%`,\n        transition: {\n            duration: 600,\n        },\n    },\n});\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const { socket } = useContext(SocketContext);\n    const [index, setIndex] = useState(0);\n    const content = secuency[index];\n    const { examples = [] } = content;\n    const x = (80 / secuency.length) * (index + 1);\n\n    const iterate = () => {\n        setIndex((index: number) => (index >= secuency.length - 1 ? 0 : index + 1));\n    };\n    useKeyDown({\n        KeyI: iterate,\n        Space: iterate,\n    });\n    useEffect(() => {\n        updateTitle('Procesamiento de una señal');\n    }, [updateTitle]);\n    useEffect(() => {\n        socket.on('iterate', iterate);\n    }, [socket]);\n\n    return (\n        <div className=\"slide signal\">\n            <span className=\"line left top\" />\n            <Mobile poseKey={x} pose={'active'} className=\"mobile\" x={x}>\n                <MorphingIcon width={128} height={128} icon={content.icon} />\n            </Mobile>\n            <span className=\"way\" />\n            <div className=\"description\">\n                <p className=\"title\">{content.title}</p>\n                <div className=\"body\">{content.body}</div>\n                {examples.length > 0 && (\n                    <ul className=\"examples\">\n                        {examples.map((example: string) => (\n                            <li className=\"item\">{example}</li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './State.scss';\nconst data = [\n    { speed: 880, torque: 20 },\n    { speed: 1250, torque: 35 },\n    { speed: 1500, torque: 47 },\n    { speed: 1750, torque: 65 },\n    { speed: 2000, torque: 70 },\n    { speed: 2250, torque: 78 },\n    { speed: 2500, torque: 75 },\n    { speed: 2750, torque: 72 },\n    { speed: 3000, torque: 70 },\n    { speed: 3250, torque: 68 },\n    { speed: 3500, torque: 65 },\n    { speed: 3750, torque: 60 },\n    { speed: 4000, torque: 55 },\n    { speed: 4250, torque: 45 },\n    { speed: 4470, torque: 27 },\n];\n\nconst Speed: React.FC = () => {\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle('Situación actual');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide \">\n            <span className=\"line left top\" />\n            <div className=\"conclusions\">\n                <ul className=\"list\">\n                    <li className=\"item\">\n                        <p className=\"headline\">Tacómetro</p>\n                        <span>Sensor fotoeléctrico. Alcance: 10.000 rpm.</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Balanza</p>\n                        <span>Tipo reloj. Alcance 25Kg. Resolusión 100g.</span>\n                    </li>\n                    <li className=\"item\">\n                        <p className=\"headline\">Control del freno</p>\n                        <span>\n                            Dos potenciometro para control fino y grueso. Sin sincronización con la\n                            red eléctrica\n                        </span>\n                    </li>\n                </ul>\n            </div>\n            <span className=\"line right bottom\" />\n        </div>\n    );\n};\n\nexport default Speed;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport { Player, ControlBar } from 'video-react';\nimport 'video-react/dist/video-react.css';\nimport './Video.scss';\ntype Player = {\n    video: {\n        toggleFullscreen: () => void;\n    };\n};\nconst Video: React.FC = () => {\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/videos' : '/thesis-presentation/videos';\n    const { updateTitle } = useTitle();\n    useEffect(() => {\n        updateTitle(' ');\n    }, [updateTitle]);\n    return (\n        <div className=\"video\">\n            <Player autoPlay src={`${urlPrefix}/calibration.mp4`}>\n                <ControlBar disableCompletely />\n            </Player>\n        </div>\n    );\n};\n\nexport default Video;\n","import React, { useEffect } from 'react';\nimport { useTitle } from '../../hooks';\nimport './WhatIs.scss';\n\nconst WhatIs: React.FC = () => {\n    const { updateTitle } = useTitle();\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n    useEffect(() => {\n        updateTitle('Automatización de un banco de pruebas de un motor a combustión');\n    }, [updateTitle]);\n    return (\n        <div className=\"slide\">\n            <div className=\"asks\">\n                <div className=\"ask\">\n                    <img className=\"icon\" alt=\"ask-icon\" src={`${urlPrefix}/ask-2.png`} />\n                    Qué es un banco de pruebas genérico\n                </div>\n                <div className=\"ask\">\n                    Para qué sirve\n                    <img className=\"icon\" alt=\"ask-icon\" src={`${urlPrefix}/ask-2.png`} />\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default WhatIs;\n","export { default as Break } from './Break/Break';\nexport { default as CalibrationCell } from './CalibrationCell/CalibrationCell';\nexport { default as CalibrationEncoder } from './CalibrationEncoder/CalibrationEncoder';\nexport { default as CalibrationMethods } from './CalibrationMethods/CalibrationMethods';\nexport { default as Conclusions } from './Conclusions/Conclusions';\nexport { default as Console } from './Console/Console';\nexport { default as CurrentSituation } from './CurrentSituation/CurrentSituation';\nexport { default as Enhancements } from './Enhancements/Enhancements';\nexport { default as Inputs } from './Inputs/Inputs';\nexport { default as Linealization } from './Linealization/Linealization';\nexport { default as MainBlocks } from './MainBlocks/MainBlocks';\nexport { default as Objectives } from './Objectives/Objectives';\nexport { default as Outputs } from './Outputs/Outputs';\nexport { default as Requirements } from './Requirements/Requirements';\nexport { default as Controller } from './Controller/Controller';\nexport { default as Thanks } from './Thanks/Thanks';\nexport { default as Title } from './Title/Title';\nexport { default as Signals } from './Signals/Signals';\nexport { default as State } from './State/State';\nexport { default as Video } from './Video/Video';\nexport { default as WhatIs } from './WhatIs/WhatIs';\n// slides order\nexport const pageIndex = [\n    'title',\n    'what-is',\n    'main-blocks',\n    'current-situation',\n    'state',\n    'console',\n    'requirements',\n    'objectives',\n    //'signals',\n    'controller',\n    'inputs',\n    'outputs',\n    //'speed',\n    //'torque',\n    'calibration-methods',\n    'calibration-cell',\n    'calibration-encoder',\n    //'linealization',\n    'video',\n    'enhancements',\n    'conclusions',\n    'thanks',\n];\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { Route, Switch, Link, useHistory, useLocation } from 'react-router-dom';\nimport { SocketContext, Update, Shortcut } from './context/Socket';\nimport QRCode from 'react-qr-code';\nimport {\n    Break,\n    CalibrationCell,\n    CalibrationEncoder,\n    CalibrationMethods,\n    Conclusions,\n    Console,\n    CurrentSituation,\n    Enhancements,\n    Inputs,\n    Signals,\n    Linealization,\n    MainBlocks,\n    Objectives,\n    Outputs,\n    pageIndex,\n    Requirements,\n    State,\n    Controller,\n    Thanks,\n    Title,\n    Video,\n    WhatIs,\n} from './pages';\nimport { useTitle, useKeyDown } from './hooks';\nimport './App.scss';\n\ndeclare global {\n    interface Window {\n        serverIP: string;\n    }\n}\n\nconst App: React.FC = () => {\n    const leftArrow = useRef(null);\n    const rightArrow = useRef(null);\n    const { title, updateTitle } = useTitle();\n    const history = useHistory();\n    const location = useLocation();\n    const { socket } = useContext(SocketContext);\n    const [devices, setDevices] = useState(0);\n\n    const urlPrefix =\n        process.env.NODE_ENV === 'development' ? '/icons' : '/thesis-presentation/icons';\n\n    const clickRight = (): void => {\n        if (rightArrow && rightArrow.current && typeof rightArrow.current.click === 'function')\n            rightArrow.current.click();\n    };\n    const clickLeft = (): void => {\n        if (leftArrow && leftArrow.current && typeof leftArrow.current.click === 'function')\n            leftArrow.current.click();\n    };\n    useKeyDown({\n        ArrowLeft: clickLeft,\n    });\n    useKeyDown({\n        ArrowRight: clickRight,\n    });\n    // notify slide changes\n    useEffect(() => {\n        // get slide name\n        const slide = location.pathname.replace('/', '');\n        // get slide index\n        const index = pageIndex.indexOf(slide);\n        // update title on restart\n        if (index === -1) updateTitle('Proyecto final de ingeniería');\n        // new update message\n        const message: Update = {\n            index: index >= 0 ? index : 0,\n            slide,\n        };\n        socket.emit('update', message);\n    }, [location, updateTitle, socket]);\n\n    useEffect(() => {\n        // process commands\n        socket.on('command', ({ command }: { command: string }) => {\n            if (command === 'next') clickRight();\n            else clickLeft();\n        });\n        // shortcut to the slide\n        socket.on('shortcut', (shortcut: Shortcut) => {\n            const { index = 0 } = shortcut;\n            // notify a slide change\n            const route = `/${pageIndex[index]}`;\n            history.push(route);\n        });\n    }, [history, socket]);\n    useEffect(() => {\n        // broadcast to update the range max value\n        socket.on('new user', () => {\n            socket.emit('count', pageIndex.length);\n        });\n        // broadcast to update the range max value\n        socket.on('devices', devices => {\n            setDevices(devices);\n        });\n    }, [socket]);\n    return (\n        <div className=\"app\">\n            <Route\n                render={({ location }) => {\n                    const { pathname } = location;\n                    const index = pageIndex.indexOf(pathname.replace('/', ''));\n                    const nextSlide = pageIndex[index + 1] || '';\n                    const prevSlide = pageIndex[index - 1] || '';\n                    const serverIP = window.serverIP || 'localhost';\n                    return (\n                        <PoseGroup>\n                            <Header\n                                className=\"header\"\n                                key=\"header\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {title}\n                            </Header>\n                            <RouteContainer key={`routerContainer${location.key}`}>\n                                <Switch location={location} key={'switch'}>\n                                    <Route path={`/break`} component={Break} key=\"break\" />\n                                    <Route\n                                        path={`/calibration-cell`}\n                                        component={CalibrationCell}\n                                        key=\"calibration-cell\"\n                                    />\n                                    <Route\n                                        path={`/calibration-encoder`}\n                                        component={CalibrationEncoder}\n                                        key=\"calibration-encoder\"\n                                    />\n                                    <Route\n                                        path={`/calibration-methods`}\n                                        component={CalibrationMethods}\n                                        key=\"calibration-methods\"\n                                    />\n                                    <Route path={`/console`} component={Console} key=\"console\" />\n                                    <Route\n                                        path={`/conclusions`}\n                                        component={Conclusions}\n                                        key=\"conclusions\"\n                                    />\n                                    <Route\n                                        path={`/controller`}\n                                        component={Controller}\n                                        key=\"controller\"\n                                    />\n                                    <Route\n                                        path={`/current-situation`}\n                                        component={CurrentSituation}\n                                        key=\"current-situation\"\n                                    />\n\n                                    <Route\n                                        path={`/enhancements`}\n                                        component={Enhancements}\n                                        key=\"enhancements\"\n                                    />\n                                    <Route path={`/inputs`} component={Inputs} key=\"inputs\" />\n                                    <Route\n                                        path={`/linealization`}\n                                        component={Linealization}\n                                        key=\"linealization\"\n                                    />\n                                    <Route\n                                        path={`/main-blocks`}\n                                        component={MainBlocks}\n                                        key=\"main-blocks\"\n                                    />\n                                    <Route\n                                        path={`/objectives`}\n                                        component={Objectives}\n                                        key=\"objectives\"\n                                    />\n                                    <Route path={`/outputs`} component={Outputs} key=\"outputs\" />\n                                    <Route\n                                        path={`/requirements`}\n                                        component={Requirements}\n                                        key=\"requirements\"\n                                    />\n                                    <Route path={`/signals`} component={Signals} key=\"signals\" />\n                                    <Route path={`/state`} component={State} key=\"state\" />\n                                    <Route path={`/thanks`} component={Thanks} key=\"thanks\" />\n                                    <Route path={`/title`} component={Title} key=\"title\" />\n                                    <Route path={`/video`} component={Video} key=\"video\" />\n                                    <Route path={`/what-is`} component={WhatIs} key=\"what-is\" />\n                                </Switch>\n                            </RouteContainer>\n                            <Controls\n                                key=\"controls\"\n                                className=\"controls\"\n                                pose={index === -1 ? 'expanded' : 'collapsed'}>\n                                {index >= 0 && (\n                                    <Link ref={leftArrow} id=\"backButton\" to={`/${prevSlide}`}>\n                                        <img\n                                            alt=\"icon-arrow-right\"\n                                            className=\"left\"\n                                            src={`${urlPrefix}/arrow-right.png`}\n                                        />\n                                    </Link>\n                                )}\n                                {index >= 0 && <span className=\"index\">{index}</span>}\n                                {index < pageIndex.length && (\n                                    <Link\n                                        ref={rightArrow}\n                                        to={`/${nextSlide}`}\n                                        className=\"noDecoration\">\n                                        {index >= 0 ? (\n                                            <img\n                                                alt=\"icon-arrow-right\"\n                                                src={`${urlPrefix}/arrow-right.png`}\n                                            />\n                                        ) : (\n                                            <div className=\"connections\">\n                                                {' '}\n                                                <QRCode\n                                                    level=\"L\"\n                                                    fgColor=\"#377771\"\n                                                    size={150}\n                                                    bgColor=\"#ffffff00\"\n                                                    value={`http://${serverIP}:3002/control`}\n                                                />\n                                                <p className=\"qrdetail\">Conectar control</p>\n                                                <div className=\"devices\">\n                                                    {new Array(devices).fill(1).map((_, i) => (\n                                                        <img\n                                                            key={`device${i}`}\n                                                            alt=\"icon-smartphone\"\n                                                            src={`${urlPrefix}/smartphone.png`}\n                                                        />\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Link>\n                                )}\n                            </Controls>\n                        </PoseGroup>\n                    );\n                }}\n            />\n            <div className=\"bg\" />\n        </div>\n    );\n};\n\nexport default App;\n\nconst RouteContainer = posed.div({\n    enter: {\n        opacity: 1,\n        left: 0,\n        transition: {\n            default: { duration: 500 },\n            beforeChildren: true,\n        },\n    },\n    exit: { opacity: 0, left: '-20%' },\n});\n\nconst Header = posed.span({\n    collapsed: {\n        fontSize: '2em',\n        height: '10vh',\n        transition: { duration: 500 },\n    },\n    expanded: {\n        fontSize: '3em',\n        height: '50vh',\n        transition: { duration: 500 },\n    },\n});\nconst Controls = posed.div({\n    collapsed: {\n        height: '5vh',\n        transition: { duration: 500 },\n    },\n    expanded: {\n        height: '50vh',\n        transition: { duration: 500 },\n    },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { TitleProvider } from './context/Title';\nimport { SocketProvider } from './context/Socket';\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <SocketProvider>\n            <TitleProvider>\n                <App />\n            </TitleProvider>\n        </SocketProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}